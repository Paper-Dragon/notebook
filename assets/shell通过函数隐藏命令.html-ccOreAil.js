import{ah as s,ai as e,ar as a,am as t}from"./app-DlM3XTS-.js";const n={};function l(h,i){return t(),e("div",null,[...i[0]||(i[0]=[a(`<h1 id="shell通过函数隐藏命令" tabindex="-1"><a class="header-anchor" href="#shell通过函数隐藏命令"><span>shell通过函数隐藏命令</span></a></h1><h2 id="隐藏命令" tabindex="-1"><a class="header-anchor" href="#隐藏命令"><span>隐藏命令</span></a></h2><p>当这个函数被调用时，无论传入什么命令，该命令的输出和错误信息都不会显示在终端上，而是会被丢弃。用户不会在终端上看到任何内容。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 将命令的标准输出和标准错误重定向到 /dev/null 中</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&gt;/dev/null    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除斜线，因为jinja2冲突</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)])])}const p=s(n,[["render",l]]),o=JSON.parse('{"path":"/note-book/LinuxOperaSystem/shell%E9%80%9A%E8%BF%87%E5%87%BD%E6%95%B0%E9%9A%90%E8%97%8F%E5%91%BD%E4%BB%A4.html","title":"shell通过函数隐藏命令","lang":"zh-CN","frontmatter":{"category":["Linux","Shell","神操作"],"description":"shell通过函数隐藏命令 隐藏命令 当这个函数被调用时，无论传入什么命令，该命令的输出和错误信息都不会显示在终端上，而是会被丢弃。用户不会在终端上看到任何内容。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shell通过函数隐藏命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-27T06:42:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/LinuxOperaSystem/shell%E9%80%9A%E8%BF%87%E5%87%BD%E6%95%B0%E9%9A%90%E8%97%8F%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"shell通过函数隐藏命令"}],["meta",{"property":"og:description","content":"shell通过函数隐藏命令 隐藏命令 当这个函数被调用时，无论传入什么命令，该命令的输出和错误信息都不会显示在终端上，而是会被丢弃。用户不会在终端上看到任何内容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T06:42:24.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T06:42:24.000Z"}]]},"git":{"createdTime":1703659344000,"updatedTime":1703659344000,"contributors":[{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":2,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"859fcdc6f0ab11d01ebc5ed123ebc089c9c7693e","time":1703659344000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"shell use function mark a command"},{"hash":"5a9529ebe48b583380732aa87da0d6d578920535","time":1703659344000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"shell use function mark a command"}]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"note-book/LinuxOperaSystem/shell通过函数隐藏命令.md","excerpt":"\\n<h2>隐藏命令</h2>\\n<p>当这个函数被调用时，无论传入什么命令，该命令的输出和错误信息都不会显示在终端上，而是会被丢弃。用户不会在终端上看到任何内容。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">function</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> ls</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">    # 将命令的标准输出和标准错误重定向到 /dev/null 中</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">    \\"</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\">$@</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> &amp;&gt;/dev/null    </span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 删除斜线，因为jinja2冲突</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,o as data};
