import{ah as n,ai as o,an as r,am as s}from"./app-BRbX01Ur.js";const a="/assets/002_%E9%A3%9E%E6%9C%BA%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%BA%B8-DygmbFde.png",e="/assets/003_%E9%A3%9E%E6%9C%BA%E5%AF%B9%E8%B1%A1-BaFv98zm.png",g="/assets/001_%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E7%B1%BB%E5%9B%BE-Cdq-5Jo_.png",i="/assets/002_Person%E7%B1%BB-Ckf0bzuw.png",l="/assets/003_Dog%E7%B1%BB-JEoiwiH5.png",p={};function h(c,t){return s(),o("div",null,t[0]||(t[0]=[r('<h1 id="类和对象" tabindex="-1"><a class="header-anchor" href="#类和对象"><span>类和对象</span></a></h1><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h2><ul><li>类和对象的概念</li><li>类和对象的关系</li><li>类的设计</li></ul><h2 id="_01-类和对象的概念" tabindex="-1"><a class="header-anchor" href="#_01-类和对象的概念"><span>01. 类和对象的概念</span></a></h2><p><strong>类</strong> 和 <strong>对象</strong> 是 <strong>面向对象编程的 两个 核心概念</strong></p><h3 id="_1-1-类" tabindex="-1"><a class="header-anchor" href="#_1-1-类"><span>1.1 类</span></a></h3><ul><li><strong>类</strong> 是对一群具有 <strong>相同 特征</strong> 或者 <strong>行为</strong> 的事物的一个统称，是抽象的，<strong>不能直接使用</strong><ul><li><strong>特征</strong> 被称为 <strong>属性</strong></li><li><strong>行为</strong> 被称为 <strong>方法</strong></li></ul></li><li><strong>类</strong> 就相当于制造飞机时的<strong>图纸</strong>，是一个 <strong>模板</strong>，是 <strong>负责创建对象的</strong></li></ul><p><img src="'+a+'" alt="002_飞机设计图纸"></p><h3 id="_1-2-对象" tabindex="-1"><a class="header-anchor" href="#_1-2-对象"><span>1.2 对象</span></a></h3><ul><li><strong>对象</strong> 是 <strong>由类创建出来的一个具体存在</strong>，可以直接使用</li><li>由 <strong>哪一个类</strong> 创建出来的 <strong>对象</strong>，就拥有在 <strong>哪一个类</strong> 中定义的： <ul><li>属性</li><li>方法</li></ul></li><li><strong>对象</strong> 就相当于用 <strong>图纸</strong> <strong>制造</strong> 的飞机</li></ul><blockquote><p>在程序开发中，应该 <strong>先有类，再有对象</strong></p></blockquote><p><img src="'+e+'" alt="003_飞机对象"></p><h2 id="_02-类和对象的关系" tabindex="-1"><a class="header-anchor" href="#_02-类和对象的关系"><span>02. 类和对象的关系</span></a></h2><ul><li><strong>类是模板</strong>，<strong>对象</strong> 是根据 <strong>类</strong> 这个模板创建出来的，应该 <strong>先有类，再有对象</strong></li><li><strong>类</strong> 只有一个，而 <strong>对象</strong> 可以有很多个 <ul><li><strong>不同的对象</strong> 之间 <strong>属性</strong> 可能会各不相同</li></ul></li><li><strong>类</strong> 中定义了什么 <strong>属性和方法</strong>，<strong>对象</strong> 中就有什么属性和方法，<strong>不可能多，也不可能少</strong></li></ul><h2 id="_03-类的设计" tabindex="-1"><a class="header-anchor" href="#_03-类的设计"><span>03. 类的设计</span></a></h2><p>在使用面相对象开发前，应该首先分析需求，确定一下，程序中需要包含哪些类！</p><p><img src="'+g+'" alt="001_植物大战僵尸类图"></p><p>在程序开发中，要设计一个类，通常需要满足一下三个要素：</p><ol><li><strong>类名</strong> 这类事物的名字，<strong>满足大驼峰命名法</strong></li><li><strong>属性</strong> 这类事物具有什么样的特征</li><li><strong>方法</strong> 这类事物具有什么样的行为</li></ol><h3 id="大驼峰命名法" tabindex="-1"><a class="header-anchor" href="#大驼峰命名法"><span>大驼峰命名法</span></a></h3><p><code>CapWords</code></p><ol><li>每一个单词的首字母大写</li><li>单词与单词之间没有下划线</li></ol><h3 id="_3-1-类名的确定" tabindex="-1"><a class="header-anchor" href="#_3-1-类名的确定"><span>3.1 类名的确定</span></a></h3><p><strong>名词提炼法</strong> 分析 <strong>整个业务流程</strong>，出现的 <strong>名词</strong>，通常就是找到的类</p><h3 id="_3-2-属性和方法的确定" tabindex="-1"><a class="header-anchor" href="#_3-2-属性和方法的确定"><span>3.2 属性和方法的确定</span></a></h3><ul><li>对 <strong>对象的特征描述</strong>，通常可以定义成 <strong>属性</strong></li><li><strong>对象具有的行为</strong>（动词），通常可以定义成 <strong>方法</strong></li></ul><blockquote><p>提示：需求中没有涉及的属性或者方法在设计类时，不需要考虑</p></blockquote><h3 id="练习-1" tabindex="-1"><a class="header-anchor" href="#练习-1"><span>练习 1</span></a></h3><p><strong>需求</strong></p><ul><li><strong>小明</strong> 今年 <strong>18 岁</strong>，<strong>身高 1.75</strong>，每天早上 <strong>跑</strong> 完步，会去 <strong>吃</strong> 东西</li><li><strong>小美</strong> 今年 <strong>17 岁</strong>，<strong>身高 1.65</strong>，小美不跑步，小美喜欢 <strong>吃</strong> 东西</li></ul><p><img src="'+i+'" alt="002_Person类"></p><h3 id="练习-2" tabindex="-1"><a class="header-anchor" href="#练习-2"><span>练习 2</span></a></h3><p><strong>需求</strong></p><ul><li>一只 <strong>黄颜色</strong> 的 <strong>狗狗</strong> 叫 <strong>大黄</strong></li><li>看见生人 <strong>汪汪叫</strong></li><li>看见家人 <strong>摇尾巴</strong></li></ul><p><img src="'+l+'" alt="003_Dog类"></p>',35)]))}const m=n(p,[["render",h]]),_=JSON.parse('{"path":"/note-book/Research_Develop/Python/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/02_%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.html","title":"类和对象","lang":"zh-CN","frontmatter":{"description":"类和对象 目标 类和对象的概念 类和对象的关系 类的设计 01. 类和对象的概念 类 和 对象 是 面向对象编程的 两个 核心概念 1.1 类 类 是对一群具有 相同 特征 或者 行为 的事物的一个统称，是抽象的，不能直接使用 特征 被称为 属性 行为 被称为 方法 类 就相当于制造飞机时的图纸，是一个 模板，是 负责创建对象的 002_飞机设计图纸 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类和对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T07:56:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Research_Develop/Python/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/02_%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"类和对象"}],["meta",{"property":"og:description","content":"类和对象 目标 类和对象的概念 类和对象的关系 类的设计 01. 类和对象的概念 类 和 对象 是 面向对象编程的 两个 核心概念 1.1 类 类 是对一群具有 相同 特征 或者 行为 的事物的一个统称，是抽象的，不能直接使用 特征 被称为 属性 行为 被称为 方法 类 就相当于制造飞机时的图纸，是一个 模板，是 负责创建对象的 002_飞机设计图纸 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T07:56:45.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-19T07:56:45.000Z"}]]},"git":{"createdTime":1691939318000,"updatedTime":1710835005000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"cb0daa33b6329eb21784aa12ccdc214113fb2885","time":1710835005000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"c"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":2.27,"words":681},"filePathRelative":"note-book/Research_Develop/Python/python面向对象/02_类和对象.md","excerpt":"\\n<h2>目标</h2>\\n<ul>\\n<li>类和对象的概念</li>\\n<li>类和对象的关系</li>\\n<li>类的设计</li>\\n</ul>\\n<h2>01. 类和对象的概念</h2>\\n<p><strong>类</strong> 和 <strong>对象</strong> 是 <strong>面向对象编程的 两个 核心概念</strong></p>\\n<h3>1.1 类</h3>\\n<ul>\\n<li><strong>类</strong> 是对一群具有 <strong>相同 特征</strong> 或者 <strong>行为</strong> 的事物的一个统称，是抽象的，<strong>不能直接使用</strong>\\n<ul>\\n<li><strong>特征</strong> 被称为 <strong>属性</strong></li>\\n<li><strong>行为</strong> 被称为 <strong>方法</strong></li>\\n</ul>\\n</li>\\n<li><strong>类</strong> 就相当于制造飞机时的<strong>图纸</strong>，是一个 <strong>模板</strong>，是 <strong>负责创建对象的</strong></li>\\n</ul>","autoDesc":true}');export{m as comp,_ as data};
