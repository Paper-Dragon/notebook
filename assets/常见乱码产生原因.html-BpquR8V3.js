import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{aj as e,ao as n,am as r}from"./app-C1lz6nkA.js";const a={};function o(i,t){return r(),e("div",null,t[0]||(t[0]=[n('<h1 id="常见乱码产生原因" tabindex="-1"><a class="header-anchor" href="#常见乱码产生原因"><span>常见乱码产生原因</span></a></h1><h2 id="常见乱码产生原因-1" tabindex="-1"><a class="header-anchor" href="#常见乱码产生原因-1"><span>常见乱码产生原因</span></a></h2><table><thead><tr><th>名称</th><th>示例</th><th>特点</th><th>原因</th></tr></thead><tbody><tr><td>古文码</td><td>浜屽紶涓夋潕鍥旇档鍏</td><td>大多为不认识的古文，夹杂日韩文</td><td>以GBK方式读取UTF-8编码的中文</td></tr><tr><td>方块码</td><td>�������</td><td>大部分字符为方块问号</td><td>以UTF-8方式读取GBK编码的中文</td></tr><tr><td>符号码</td><td>å¼ä¸æåçäºèµµ­èä¸</td><td>大部分字符为各种符号</td><td>以ISO8859-1方式读取UTF-8编码的中文</td></tr><tr><td>拼音码</td><td>ÕÅÈýÀîËÄÍõÎåÕÔÁ</td><td>大部分字符为带着声调的字母</td><td>以ISO8859-1方式读取GBK编码的中文</td></tr><tr><td>问句码</td><td>犱笁鏉庡洓鐜嬩簲叚鑰?</td><td>基本和古文码一致，字符串为偶数时正常，长度为奇数时结尾会带上问号</td><td>以GBK方式读取UTF-8编码的中文，然后又用GBK的格式再次读取</td></tr><tr><td>锟拷码</td><td>锟斤拷锟斤拷锟斤拷</td><td>基本都是锟斤拷三个字符</td><td>以GBK方式读取UTF-8编码的��</td></tr></tbody></table><h2 id="方块码的产生原因" tabindex="-1"><a class="header-anchor" href="#方块码的产生原因"><span>方块码的产生原因</span></a></h2><p>下面我们来看一下方块码具体是怎么来的 首先需要知道方块码‘�’的产生原因，由上图可知，方块码是以UTF-8方式读取GBK编码的中文，而UTF-8和GBK编码的区别在于：</p><ul><li>UTF-8会将中文转化成三个字节进行存储</li><li>GBK会将中文转化成两个字节进行存储</li></ul><h2 id="锟拷码的产生原因" tabindex="-1"><a class="header-anchor" href="#锟拷码的产生原因"><span>锟拷码的产生原因</span></a></h2><p>由上表可知，锟拷码是由于以GBK方式读取UTF-8编码的��得到，而如果产生了方块码，就有可能会产生锟拷码</p>',8)]))}const p=d(a,[["render",o],["__file","常见乱码产生原因.html.vue"]]),s=JSON.parse('{"path":"/note-book/OperaSystems/%E5%B8%B8%E8%A7%81%E4%B9%B1%E7%A0%81%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0.html","title":"常见乱码产生原因","lang":"zh-CN","frontmatter":{"description":"常见乱码产生原因 常见乱码产生原因 方块码的产生原因 下面我们来看一下方块码具体是怎么来的 首先需要知道方块码‘�’的产生原因，由上图可知，方块码是以UTF-8方式读取GBK编码的中文，而UTF-8和GBK编码的区别在于： UTF-8会将中文转化成三个字节进行存储 GBK会将中文转化成两个字节进行存储 锟拷码的产生原因 由上表可知，锟拷码是由于以GBK...","head":[["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/OperaSystems/%E5%B8%B8%E8%A7%81%E4%B9%B1%E7%A0%81%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"常见乱码产生原因"}],["meta",{"property":"og:description","content":"常见乱码产生原因 常见乱码产生原因 方块码的产生原因 下面我们来看一下方块码具体是怎么来的 首先需要知道方块码‘�’的产生原因，由上图可知，方块码是以UTF-8方式读取GBK编码的中文，而UTF-8和GBK编码的区别在于： UTF-8会将中文转化成三个字节进行存储 GBK会将中文转化成两个字节进行存储 锟拷码的产生原因 由上表可知，锟拷码是由于以GBK..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-13T15:08:38.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-13T15:08:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见乱码产生原因\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-13T15:08:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PaperDragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"常见乱码产生原因","slug":"常见乱码产生原因-1","link":"#常见乱码产生原因-1","children":[]},{"level":2,"title":"方块码的产生原因","slug":"方块码的产生原因","link":"#方块码的产生原因","children":[]},{"level":2,"title":"锟拷码的产生原因","slug":"锟拷码的产生原因","link":"#锟拷码的产生原因","children":[]}],"git":{"createdTime":1691939318000,"updatedTime":1691939318000,"contributors":[{"name":"PaperDragon","email":"2678885646@qq.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"note-book/OperaSystems/常见乱码产生原因.md","localizedDate":"2023年8月13日","excerpt":"\\n<h2>常见乱码产生原因</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>名称</th>\\n<th>示例</th>\\n<th>特点</th>\\n<th>原因</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>古文码</td>\\n<td>浜屽紶涓夋潕鍥旇档鍏</td>\\n<td>大多为不认识的古文，夹杂日韩文</td>\\n<td>以GBK方式读取UTF-8编码的中文</td>\\n</tr>\\n<tr>\\n<td>方块码</td>\\n<td>�������</td>\\n<td>大部分字符为方块问号</td>\\n<td>以UTF-8方式读取GBK编码的中文</td>\\n</tr>\\n<tr>\\n<td>符号码</td>\\n<td>å¼ä¸æåçäºèµµ­èä¸</td>\\n<td>大部分字符为各种符号</td>\\n<td>以ISO8859-1方式读取UTF-8编码的中文</td>\\n</tr>\\n<tr>\\n<td>拼音码</td>\\n<td>ÕÅÈýÀîËÄÍõÎåÕÔÁ</td>\\n<td>大部分字符为带着声调的字母</td>\\n<td>以ISO8859-1方式读取GBK编码的中文</td>\\n</tr>\\n<tr>\\n<td>问句码</td>\\n<td>犱笁鏉庡洓鐜嬩簲叚鑰?</td>\\n<td>基本和古文码一致，字符串为偶数时正常，长度为奇数时结尾会带上问号</td>\\n<td>以GBK方式读取UTF-8编码的中文，然后又用GBK的格式再次读取</td>\\n</tr>\\n<tr>\\n<td>锟拷码</td>\\n<td>锟斤拷锟斤拷锟斤拷</td>\\n<td>基本都是锟斤拷三个字符</td>\\n<td>以GBK方式读取UTF-8编码的��</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{p as comp,s as data};
