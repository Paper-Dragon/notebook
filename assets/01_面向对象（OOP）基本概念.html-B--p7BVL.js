import{ah as o,ai as r,ar as n,am as e}from"./app-CJcqO2d5.js";const s="/assets/001_%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B-DGAOwWGr.png",a="/assets/001_%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8-D7B6scKR.png",g="/assets/001_%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E7%B1%BB%E5%9B%BE-Cdq-5Jo_.png",i={};function l(c,t){return e(),r("div",null,[...t[0]||(t[0]=[n('<h1 id="面向对象-oop-基本概念" tabindex="-1"><a class="header-anchor" href="#面向对象-oop-基本概念"><span>面向对象(OOP)基本概念</span></a></h1><p><strong>面向对象编程</strong> —— <code>Object Oriented Programming</code> 简写 <code>OOP</code></p><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h2><ul><li>了解 <strong>面向对象</strong> 基本概念</li></ul><h2 id="_01-面向对象基本概念" tabindex="-1"><a class="header-anchor" href="#_01-面向对象基本概念"><span>01. 面向对象基本概念</span></a></h2><ul><li>我们之前学习的编程方式就是 <strong>面向过程</strong> 的</li><li><strong>面相过程</strong> 和 <strong>面相对象</strong>，是两种不同的 <strong>编程方式</strong></li><li>对比 <strong>面向过程</strong> 的特点，可以更好地了解什么是 <strong>面向对象</strong></li></ul><h3 id="_1-1-过程和函数-科普" tabindex="-1"><a class="header-anchor" href="#_1-1-过程和函数-科普"><span>1.1 过程和函数（科普）</span></a></h3><ul><li><strong>过程</strong> 是早期的一个编程概念</li><li><strong>过程</strong> 类似于函数，只能执行，但是没有返回值</li><li><strong>函数</strong> 不仅能执行，还可以返回结果</li></ul><h3 id="_1-2-面相过程-和-面相对象-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-2-面相过程-和-面相对象-基本概念"><span>1.2 面相过程 和 面相对象 基本概念</span></a></h3><h4 id="_1-面相过程-——-怎么做" tabindex="-1"><a class="header-anchor" href="#_1-面相过程-——-怎么做"><span>1) <strong>面相过程</strong> —— <strong>怎么做</strong>？</span></a></h4><ol><li>把完成某一个需求的 <code>所有步骤</code> <code>从头到尾</code> 逐步实现</li><li>根据开发需求，将某些 <strong>功能独立</strong> 的代码 <strong>封装</strong> 成一个又一个 <strong>函数</strong></li><li>最后完成的代码，就是顺序地调用 <strong>不同的函数</strong></li></ol><p><strong>特点</strong></p><ol><li>注重 <strong>步骤与过程</strong>，不注重职责分工</li><li>如果需求复杂，代码会变得很复杂</li><li><strong>开发复杂项目，没有固定的套路，开发难度很大！</strong></li></ol><p><img src="'+s+'" alt="001_面向过程"></p><h4 id="_2-面向对象-——-谁来做" tabindex="-1"><a class="header-anchor" href="#_2-面向对象-——-谁来做"><span>2) <strong>面向对象</strong> —— <strong>谁来做</strong>？</span></a></h4><blockquote><p>相比较函数，<strong>面向对象</strong> 是 <strong>更大</strong> 的 <strong>封装</strong>，根据 <strong>职责</strong> 在 <strong>一个对象中 封装 多个方法</strong></p></blockquote><ol><li>在完成某一个需求前，首先确定 <strong>职责</strong> —— <strong>要做的事情（方法）</strong></li><li>根据 <strong>职责</strong> 确定不同的 <strong>对象</strong>，在 <strong>对象</strong> 内部封装不同的 <strong>方法</strong>（多个）</li><li>最后完成的代码，就是顺序地让 <strong>不同的对象</strong> 调用 <strong>不同的方法</strong></li></ol><p><strong>特点</strong></p><ol><li>注重 <strong>对象和职责</strong>，不同的对象承担不同的职责</li><li>更加适合应对复杂的需求变化，<strong>是专门应对复杂项目开发，提供的固定套路</strong></li><li><strong>需要在面向过程基础上，再学习一些面向对象的语法</strong></li></ol><p><img src="'+a+'" alt="001_植物大战僵尸"></p><p><img src="'+g+'" alt="001_植物大战僵尸类图"></p>',21)])])}const h=o(i,[["render",l]]),m=JSON.parse('{"path":"/note-book/Research_Develop/Python/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/01_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88OOP%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","title":"面向对象(OOP)基本概念","lang":"zh-CN","frontmatter":{"description":"面向对象(OOP)基本概念 面向对象编程 —— Object Oriented Programming 简写 OOP 目标 了解 面向对象 基本概念 01. 面向对象基本概念 我们之前学习的编程方式就是 面向过程 的 面相过程 和 面相对象，是两种不同的 编程方式 对比 面向过程 的特点，可以更好地了解什么是 面向对象 1.1 过程和函数（科普） 过程...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象(OOP)基本概念\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T07:56:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Research_Develop/Python/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/01_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88OOP%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"面向对象(OOP)基本概念"}],["meta",{"property":"og:description","content":"面向对象(OOP)基本概念 面向对象编程 —— Object Oriented Programming 简写 OOP 目标 了解 面向对象 基本概念 01. 面向对象基本概念 我们之前学习的编程方式就是 面向过程 的 面相过程 和 面相对象，是两种不同的 编程方式 对比 面向过程 的特点，可以更好地了解什么是 面向对象 1.1 过程和函数（科普） 过程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T07:56:45.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-19T07:56:45.000Z"}]]},"git":{"createdTime":1691939318000,"updatedTime":1710835005000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"cb0daa33b6329eb21784aa12ccdc214113fb2885","time":1710835005000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"c"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":1.78,"words":533},"filePathRelative":"note-book/Research_Develop/Python/python面向对象/01_面向对象（OOP）基本概念.md","excerpt":"\\n<p><strong>面向对象编程</strong> —— <code>Object Oriented Programming</code> 简写 <code>OOP</code></p>\\n<h2>目标</h2>\\n<ul>\\n<li>了解 <strong>面向对象</strong> 基本概念</li>\\n</ul>\\n<h2>01. 面向对象基本概念</h2>\\n<ul>\\n<li>我们之前学习的编程方式就是 <strong>面向过程</strong> 的</li>\\n<li><strong>面相过程</strong> 和 <strong>面相对象</strong>，是两种不同的 <strong>编程方式</strong></li>\\n<li>对比 <strong>面向过程</strong> 的特点，可以更好地了解什么是 <strong>面向对象</strong></li>\\n</ul>","autoDesc":true}');export{h as comp,m as data};
