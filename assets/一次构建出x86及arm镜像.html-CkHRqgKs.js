import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{aj as e,ao as s,am as t}from"./app-b9IBifcg.js";const n="/assets/image-20230220093413271-Cxn_c3jC.png",r="/assets/image-20230220093440387-mNZm5Woj.png",l="/assets/image-20230220093458512-utr98ZlO.png",h="/assets/image-20230220093511276-DvjSxxsw.png",p="/assets/image-20230220094027454-jgATUrZJ.png",g="/assets/image-20230220094041191-Fu-op8Rc.png",c="/assets/image-20230220094052077-D2cAahaU.png",o="/assets/image-20230220094104848-C7i36pgO.png",d={};function m(k,i){return t(),e("div",null,i[0]||(i[0]=[s('<h1 id="一次构建出x86及arm镜像" tabindex="-1"><a class="header-anchor" href="#一次构建出x86及arm镜像"><span>一次构建出x86及arm镜像</span></a></h1><h2 id="cpu指令集介绍及不同的指令集的使用场景" tabindex="-1"><a class="header-anchor" href="#cpu指令集介绍及不同的指令集的使用场景"><span>CPU指令集介绍及不同的指令集的使用场景</span></a></h2><figure><img src="'+n+'" alt="image-20230220093413271" tabindex="0" loading="lazy"><figcaption>image-20230220093413271</figcaption></figure><figure><img src="'+r+'" alt="image-20230220093440387" tabindex="0" loading="lazy"><figcaption>image-20230220093440387</figcaption></figure><figure><img src="'+l+'" alt="image-20230220093458512" tabindex="0" loading="lazy"><figcaption>image-20230220093458512</figcaption></figure><figure><img src="'+h+`" alt="image-20230220093511276" tabindex="0" loading="lazy"><figcaption>image-20230220093511276</figcaption></figure><h2 id="镜像构建基础环境及不同cpu指令集实现环境准备" tabindex="-1"><a class="header-anchor" href="#镜像构建基础环境及不同cpu指令集实现环境准备"><span>镜像构建基础环境及不同CPU指令集实现环境准备</span></a></h2><h3 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span>安装Docker</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get-docker.geekery.cn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="安装cpu指令集模拟平台" tabindex="-1"><a class="header-anchor" href="#安装cpu指令集模拟平台"><span>安装CPU指令集模拟平台</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">qemu-user-static:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是一个可以在当前操作系统来运行其他架构的一个仿真器，可以通过x86的机器编译出其他不同架构的docker镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">binfmt-support:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 解析不同系统的二进制文件给内核运行，再将执行结果给用户进程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="image-20230220094027454" tabindex="0" loading="lazy"><figcaption>image-20230220094027454</figcaption></figure><figure><img src="'+g+'" alt="image-20230220094041191" tabindex="0" loading="lazy"><figcaption>image-20230220094041191</figcaption></figure><figure><img src="'+c+'" alt="image-20230220094052077" tabindex="0" loading="lazy"><figcaption>image-20230220094052077</figcaption></figure><h2 id="同时构建x86-64及arm平台容器镜像" tabindex="-1"><a class="header-anchor" href="#同时构建x86-64及arm平台容器镜像"><span>同时构建x86_64及ARM平台容器镜像</span></a></h2><figure><img src="'+o+`" alt="image-20230220094104848" tabindex="0" loading="lazy"><figcaption>image-20230220094104848</figcaption></figure><h2 id="在x86上交叉编译arm版本的开发环境构建" tabindex="-1"><a class="header-anchor" href="#在x86上交叉编译arm版本的开发环境构建"><span>在x86上交叉编译ARM版本的开发环境构建</span></a></h2><blockquote><p>要注意必须使用正确的底包镜像</p><ul><li>arm32v7/ubuntu:22.04</li><li>arm64v8/ubuntu:16.04</li></ul></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 64位的：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arm64v8/ubuntu:16.04</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 32位的：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/qemu-arm-static:/usr/bin/qemu-arm-static</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arm32v7/ubuntu:22.04</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19)]))}const f=a(d,[["render",m],["__file","一次构建出x86及arm镜像.html.vue"]]),A=JSON.parse('{"path":"/note-book/Docker/%E4%B8%80%E6%AC%A1%E6%9E%84%E5%BB%BA%E5%87%BAx86%E5%8F%8Aarm%E9%95%9C%E5%83%8F.html","title":"一次构建出x86及arm镜像","lang":"zh-CN","frontmatter":{"description":"一次构建出x86及arm镜像 CPU指令集介绍及不同的指令集的使用场景 image-20230220093413271image-20230220093413271 image-20230220093440387image-20230220093440387 image-20230220093458512image-20230220093458512 ...","head":[["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Docker/%E4%B8%80%E6%AC%A1%E6%9E%84%E5%BB%BA%E5%87%BAx86%E5%8F%8Aarm%E9%95%9C%E5%83%8F.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"一次构建出x86及arm镜像"}],["meta",{"property":"og:description","content":"一次构建出x86及arm镜像 CPU指令集介绍及不同的指令集的使用场景 image-20230220093413271image-20230220093413271 image-20230220093440387image-20230220093440387 image-20230220093458512image-20230220093458512 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-19T08:25:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-19T08:25:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一次构建出x86及arm镜像\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-19T08:25:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PaperDragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"CPU指令集介绍及不同的指令集的使用场景","slug":"cpu指令集介绍及不同的指令集的使用场景","link":"#cpu指令集介绍及不同的指令集的使用场景","children":[]},{"level":2,"title":"镜像构建基础环境及不同CPU指令集实现环境准备","slug":"镜像构建基础环境及不同cpu指令集实现环境准备","link":"#镜像构建基础环境及不同cpu指令集实现环境准备","children":[{"level":3,"title":"安装Docker","slug":"安装docker","link":"#安装docker","children":[]},{"level":3,"title":"安装CPU指令集模拟平台","slug":"安装cpu指令集模拟平台","link":"#安装cpu指令集模拟平台","children":[]}]},{"level":2,"title":"同时构建x86_64及ARM平台容器镜像","slug":"同时构建x86-64及arm平台容器镜像","link":"#同时构建x86-64及arm平台容器镜像","children":[]},{"level":2,"title":"在x86上交叉编译ARM版本的开发环境构建","slug":"在x86上交叉编译arm版本的开发环境构建","link":"#在x86上交叉编译arm版本的开发环境构建","children":[]}],"git":{"createdTime":1691939318000,"updatedTime":1721377532000,"contributors":[{"name":"PaperDragon","email":"2678885646@qq.com","commits":1},{"name":"PaperDragon-SH","email":"2678885646@qq.com","commits":1}]},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"note-book/Docker/一次构建出x86及arm镜像.md","localizedDate":"2023年8月13日","excerpt":"\\n<h2>CPU指令集介绍及不同的指令集的使用场景</h2>\\n<figure><figcaption>image-20230220093413271</figcaption></figure>\\n<figure><figcaption>image-20230220093440387</figcaption></figure>\\n<figure><figcaption>image-20230220093458512</figcaption></figure>\\n<figure><figcaption>image-20230220093511276</figcaption></figure>\\n<h2>镜像构建基础环境及不同CPU指令集实现环境准备</h2>","autoDesc":true}');export{f as comp,A as data};
