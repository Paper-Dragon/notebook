import{ah as i,ai as a,ar as n,am as h}from"./app-B-U9xqs6.js";const l="/assets/image-20211109120422697-BQ28DQYR.png",t="/assets/image-20211109120844510-D0I4rYnc.png",k="/assets/image-20211109132501205-EmXzdZF3.png",e={};function p(r,s){return h(),a("div",null,s[0]||(s[0]=[n('<h1 id="nginx高级进阶篇" tabindex="-1"><a class="header-anchor" href="#nginx高级进阶篇"><span>Nginx高级进阶篇</span></a></h1><h2 id="nginx-web服务器" tabindex="-1"><a class="header-anchor" href="#nginx-web服务器"><span>Nginx Web服务器</span></a></h2><h2 id="nginx-proxy-服务器" tabindex="-1"><a class="header-anchor" href="#nginx-proxy-服务器"><span>Nginx Proxy 服务器</span></a></h2><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h3><h4 id="正向代理" tabindex="-1"><a class="header-anchor" href="#正向代理"><span>正向代理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内网客户机通过代理访问互联网，通常需要设置代理服务器的地址和端口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+l+'" alt="image-20211109120422697"></p><p>squid：</p><h4 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理"><span>反向代理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">外网用户通过代理访问内网服务器，内网服务器无感知</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+t+`" alt="image-20211109120844510"></p><h4 id="正向代理和反向代理的区别是什么" tabindex="-1"><a class="header-anchor" href="#正向代理和反向代理的区别是什么"><span>正向代理和反向代理的区别是什么</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--------正代--------</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 为客户端做代理,代理客户端去访问后方的Web服务器</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">VPN翻墙</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 任何可以连接到该代理服务器的软件，就可以通过代理访问任何的其他服务器，然后把数据返回给客户端</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--------反代--------</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 为服务器做代理,代理服务器接受用户的请求,能够将用户的请求平均分发给后方的Web集群。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 具有缓冲服务器内容的空间,会将一些简单的用户请求数据存储到本地,让用户能够快速得到信息。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用户与服务器之间是无感知的,是通过反代进行联系在一起,反代会去监听双方的状态</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   客户端向服务端请求数据时,发送完http请求后关机了,这时我们的服务器没有感知,但反代通过监</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   听状态会直接将客户端的请求丢弃,不在后方的web服务器发送,避免的垃圾信息的网络拥塞。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="proxy代理" tabindex="-1"><a class="header-anchor" href="#proxy代理"><span>Proxy代理</span></a></h3><h4 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngx_http_proxy_module</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h4><p>代理</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> URL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">代理后端服务器URL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	—</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	location,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> if</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> limit_except</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>缓冲区</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffering</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓冲开关</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffering</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">proxy_buffing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 开启的情况下，nginx后吧后端返回的内容先放到缓冲区当中，然后再返回给客户端（边收边传）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffer_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffer_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">8k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> number</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓冲区数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_buffers</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 4k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">8k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_busy_buffers_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">忙碌的缓冲区大小，控制同时传给客户端的buffer的数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_busy_buffers_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">16k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">设置真实客户端地址</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $proxy_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">			proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Connection</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_connect_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_connect_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 60s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_send_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx进程向fastcgi进程发送request的整个过程的超时时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_send_timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 60s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="启用代理" tabindex="-1"><a class="header-anchor" href="#启用代理"><span>启用代理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_pass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://172.16.100.16:81</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_redirect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">转发时是否使用默认端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $http_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#重新定义或者添加后端服务器的请求头(源IP....)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   X-Real-IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#启用客户端真实IP(不启用在日志中显示为代理器访问的网站)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_set_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   X-Forwarded-For</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#记录代理地址</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ​</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_connect_timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#后端服务器连接的超时时间(发起三次握手后的响应时间 TCP连接)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_send_timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#后端服务器数据回传时间(在规定时间内必须传完所有数据)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_read_timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Nginx负载均衡时,对后方的Web服务器进行监控(连续60秒没收到1个字节,连接关闭)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  ​</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_buffering</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#开启缓存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_buffer_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 32k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#响应头的缓冲区</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_buffers</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 128k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#内容的缓冲区域大小(4个缓冲区,每个缓冲区大小为128K)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_busy_buffers_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 256k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#从proxy_buffers划出一部分缓冲区来专门向客户端传送数据的地方</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_max_temp_file_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 256k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#超大响应头存储成文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="proxy缓存" tabindex="-1"><a class="header-anchor" href="#proxy缓存"><span>Proxy缓存</span></a></h3><p><img src="`+k+`" alt="image-20211109132501205"></p><h4 id="缓存类型" tabindex="-1"><a class="header-anchor" href="#缓存类型"><span>缓存类型</span></a></h4><p>网页缓存 CDN</p><p>数据库缓存 memcache redis</p><p>网页缓存 nginx-proxy</p><p>客户端缓存，浏览器缓存</p><h4 id="模块-1" tabindex="-1"><a class="header-anchor" href="#模块-1"><span>模块</span></a></h4><p>ngx_http_proxy_module</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">原理：将Proxy服务器作为realServer的缓存服务器，加速用户的访问过程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      将realServer上的一部分数据放到Proxy服务器上</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      当用户请求数据时,realServer将数据返回时,先将数据在Proxy上进行暂存,在发送给用户。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      当用户第二次访问时,访问到缓存的数据,可直接返回,加速用户对服务器的访问。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1"><span>语法</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓存开关</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zonename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">代理缓存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [levels=levels] [use_temp_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">on|off] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keys_zone</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">name:size</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> [inactive</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=time]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [max_size=size] [min_free</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">size] [manager_files</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">number] [manager_sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time] [manager_threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time] [loader_files</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">number] [loader_sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time] [loader_threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time] [purger</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">on|off] [purger_files</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">number] [purger_sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time] [purger_threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time];</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	—</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">example</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proxy_cache_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/nginx/cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> levels=1:2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keys_zone=zonename:10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓存维度</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache_key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">定义缓存唯一key，通过唯一key进行hash读取缓存文件名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache_key</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $scheme$proxy_host$request_uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">缓存过期</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Syntax:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	proxy_cache_valid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [code </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">...]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	—</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Context:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 	http,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> location</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">proxy_cache_valid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 302</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">proxy_cache_valid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 404</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      1m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="启动缓存" tabindex="-1"><a class="header-anchor" href="#启动缓存"><span>启动缓存</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  proxy_cache_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/qianfeng/cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> levels=1:2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keys_zone=proxy_cache:10m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> max_size=10G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inactive=60m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use_temp_path=off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">参数解析：/app/qianfeng/cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">用户自定义缓存文件夹,需提前创建</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     levels</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1:2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">缓存</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 存放的2级目录</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">将每次用户的请求放到一个文件夹中,一个用户一个文件夹</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">结构分明,用户查找更准确</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     keys_zone</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">proxy_cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">缓存区的名字/规则</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     :10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">10m空间,用来存放Key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">一个Key代表一个用户的请求</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     max_size</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">10g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">具体的缓存空间</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">上限的空间,如果不设置,默认服务器有多大磁盘就存多大</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     inactive</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">60m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">存放60分钟,超过时间被清理,清理不需要的内容</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">     use_temp_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">off</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">不使用临时缓存路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      proxy_cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proxy_cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#第一个是命令主体 第二个是上面定义的策略名 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      proxy_cache_valid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 304</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 12h</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#用户访问的状态码为200 304的能缓存12h</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      proxy_cache_valid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> any</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#除了上面的状态码,其他都存储10分钟</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      proxy_cache_key</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $host$uri$is_args$args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#URL进行hash得到Key,对比Key,得到对应数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      add_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Nginx-Cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$upstream_cache_status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#标识缓存的状态(有没有缓中)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      proxy_next_upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> error</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> invalid_header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http_500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http_502</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http_503</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http_504</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#对后方Web服务器进行监控,当后方的realServer出现5系错误时,直接将用户的请求分发给另外服务器</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">      ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/qianfeng/cache</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>proxy_cache_path命令中的参数及对应配置说明如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.用于缓存的本地磁盘目录是/app/tianyun.me/cache</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.levels在/app/tianyun.me/cache/设置了一个两级层次结构的目录。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">将大量的文件放置在单个目录中会导致文件访问缓慢，所以针对大多数部署，我们推荐使用两级目录层次结构。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果levels参数没有配置，则NGINX会将所有的文件放到同一个目录中。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.keys_zone设置一个共享内存区，该内存区用于存储缓存键和元数据，有些类似计时器的用途。将键的拷贝放入内存可以使NGINX在不检索磁盘的情况下快速决定一个请求是HIT还是MISS，这样大大提高了检索速度。一个1MB的内存空间可以存储大约8000个key，那么上面配置的10MB内存空间可以存储差不多80000个key。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4.max_size设置了缓存的上限（在上面的例子中是10G）。这是一个可选项；如果不指定具体值，那就是允许缓存不断增长，占用所有可用的磁盘空间。当缓存达到这个上线，处理器便调用cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manager来移除最近最少被使用的文件，这样把缓存的空间降低至这个限制之下。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5.inactive指定了项目在不被访问的情况下能够在内存中保持的时间。在上面的例子中，如果一个文件在60分钟之内没有被请求，则缓存管理将会自动将其在内存中删除，不管该文件是否过期。该参数默认值为10分钟（10m）。注意，非活动内容有别于过期内容。NGINX不会自动删除由缓存控制头部指定的过期内容（本例中Cache-Control:max-age</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=120）。过期内容只有在inactive指定时间内没有被访问的情况下才会被删除。如果过期内容被访问了，那么NGINX就会将其从原服务器上刷新，并更新对应的inactive计时器。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6.NGINX最初会将注定写入缓存的文件先放入一个临时存储区域，</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use_temp_path=off命令指示NGINX将在缓存这些文件时将它们写入同一个目录下。我们强烈建议你将参数设置为off来避免在文件系统中不必要的数据拷贝。use_temp_path在NGINX1.7版本和NGINX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Plus</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> R6中有所介绍。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="课后题" tabindex="-1"><a class="header-anchor" href="#课后题"><span>课后题</span></a></h4><h3 id="负载均衡部分详解" tabindex="-1"><a class="header-anchor" href="#负载均衡部分详解"><span>负载均衡部分详解</span></a></h3><h2 id="nginx-email" tabindex="-1"><a class="header-anchor" href="#nginx-email"><span>Nginx Email</span></a></h2>`,42)]))}const g=i(e,[["render",p]]),F=JSON.parse('{"path":"/note-book/Nginx-OpenResty/nginx02.html","title":"Nginx高级进阶篇","lang":"zh-CN","frontmatter":{"description":"Nginx高级进阶篇 Nginx Web服务器 Nginx Proxy 服务器 原理 正向代理 image-20211109120422697 squid： 反向代理 image-20211109120844510 正向代理和反向代理的区别是什么 Proxy代理 模块 语法 代理 缓冲区 启用代理 Proxy缓存 image-2021110913250...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx高级进阶篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-11T02:13:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Nginx-OpenResty/nginx02.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"Nginx高级进阶篇"}],["meta",{"property":"og:description","content":"Nginx高级进阶篇 Nginx Web服务器 Nginx Proxy 服务器 原理 正向代理 image-20211109120422697 squid： 反向代理 image-20211109120844510 正向代理和反向代理的区别是什么 Proxy代理 模块 语法 代理 缓冲区 启用代理 Proxy缓存 image-2021110913250..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-11T02:13:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-11T02:13:31.000Z"}]]},"git":{"createdTime":1691939318000,"updatedTime":1744337611000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":3,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"4f5d306b7085d639c6ebe401af5124eac0f820e0","time":1744337611000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Firefox密码提取"},{"hash":"16fb25c92a173306ab9fbefc5d1dc98da6d7d961","time":1709976583000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"rename"},{"hash":"cddba0ef1a45120da05a0b063970ad18863ba0b8","time":1705981137000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"add OpenResty directory"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":7.08,"words":2123},"filePathRelative":"note-book/Nginx-OpenResty/nginx02.md","excerpt":"\\n<h2>Nginx Web服务器</h2>\\n<h2>Nginx Proxy 服务器</h2>\\n<h3>原理</h3>\\n<h4>正向代理</h4>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">内网客户机通过代理访问互联网，通常需要设置代理服务器的地址和端口</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{g as comp,F as data};
