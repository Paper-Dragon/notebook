import{ah as a,ai as n,ar as e,am as p}from"./app-BsML8ihm.js";const i={};function t(l,s){return p(),n("div",null,s[0]||(s[0]=[e(`<h1 id="tcpdump抓包命令" tabindex="-1"><a class="header-anchor" href="#tcpdump抓包命令"><span>tcpdump抓包命令</span></a></h1><blockquote><p>简介：tcpdump是一个可以根据需求来抓取网络上传输的数据包的工具</p></blockquote><h1 id="常用的命令选项有" tabindex="-1"><a class="header-anchor" href="#常用的命令选项有"><span>常用的命令选项有：</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>-c：设定抓取的数量</span></span>
<span class="line"><span>-i：指定监听的网口</span></span>
<span class="line"><span>-w：将抓取的数据包保存到文件</span></span>
<span class="line"><span>-s：截取报文的内容，默认截取96字节，-s0表示截取全部</span></span>
<span class="line"><span>-r：读取数据包内容</span></span>
<span class="line"><span>-C 10：每10M保存一个包</span></span>
<span class="line"><span>-G 600：每10分钟保存一个包</span></span>
<span class="line"><span></span></span>
<span class="line"><span>过滤的参数规则：</span></span>
<span class="line"><span>host：指定主机名</span></span>
<span class="line"><span>net：指定网段</span></span>
<span class="line"><span>port：指定端口</span></span>
<span class="line"><span>portrange：指定端口范围</span></span>
<span class="line"><span></span></span>
<span class="line"><span>连接运算符</span></span>
<span class="line"><span>and：所有的条件都满足</span></span>
<span class="line"><span>or：只要满足一个条件</span></span>
<span class="line"><span>not：取反，也可以用！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子：</span></a></h2><p>1、抓取主机172.0.0.1的eth0网口的8080、8081端口传输的数据包并保存文件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcpdump</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> eth0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8081</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 172.0.0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.pcap</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2、按 crtl+c 停止抓包，当前目录会生成一个1.pcap文件</p><p>3、简单查看数据包内容</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcpdump</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1..pcap</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注：一般对抓取的数据包用Wireshark工具进行分析</p>`,11)]))}const c=a(i,[["render",t]]),h=JSON.parse('{"path":"/note-book/LinuxOperaSystem/tcpdump%E6%8A%93%E5%8C%85%E5%91%BD%E4%BB%A4.html","title":"tcpdump抓包命令","lang":"zh-CN","frontmatter":{"description":"tcpdump抓包命令 简介：tcpdump是一个可以根据需求来抓取网络上传输的数据包的工具 常用的命令选项有： 例子： 1、抓取主机172.0.0.1的eth0网口的8080、8081端口传输的数据包并保存文件 2、按 crtl+c 停止抓包，当前目录会生成一个1.pcap文件 3、简单查看数据包内容 注：一般对抓取的数据包用Wireshark工具进行分析","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tcpdump抓包命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-26T05:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/LinuxOperaSystem/tcpdump%E6%8A%93%E5%8C%85%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"tcpdump抓包命令"}],["meta",{"property":"og:description","content":"tcpdump抓包命令 简介：tcpdump是一个可以根据需求来抓取网络上传输的数据包的工具 常用的命令选项有： 例子： 1、抓取主机172.0.0.1的eth0网口的8080、8081端口传输的数据包并保存文件 2、按 crtl+c 停止抓包，当前目录会生成一个1.pcap文件 3、简单查看数据包内容 注：一般对抓取的数据包用Wireshark工具进行分析"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T05:41:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T05:41:05.000Z"}]]},"git":{"createdTime":1691939318000,"updatedTime":1711431665000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":2,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"e18707b4abacb009f69df6c80823f3294650cc74","time":1711431665000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"Markdown 格式规范化"},{"hash":"b93dc3fce09b07da1973c2c3e27e352936cc292c","time":1698989873000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"删除不必要的分隔符，清理部分todo"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":0.91,"words":273},"filePathRelative":"note-book/LinuxOperaSystem/tcpdump抓包命令.md","excerpt":"\\n<blockquote>\\n<p>简介：tcpdump是一个可以根据需求来抓取网络上传输的数据包的工具</p>\\n</blockquote>\\n<h1>常用的命令选项有：</h1>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-\\"><span class=\\"line\\"><span>-c：设定抓取的数量</span></span>\\n<span class=\\"line\\"><span>-i：指定监听的网口</span></span>\\n<span class=\\"line\\"><span>-w：将抓取的数据包保存到文件</span></span>\\n<span class=\\"line\\"><span>-s：截取报文的内容，默认截取96字节，-s0表示截取全部</span></span>\\n<span class=\\"line\\"><span>-r：读取数据包内容</span></span>\\n<span class=\\"line\\"><span>-C 10：每10M保存一个包</span></span>\\n<span class=\\"line\\"><span>-G 600：每10分钟保存一个包</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>过滤的参数规则：</span></span>\\n<span class=\\"line\\"><span>host：指定主机名</span></span>\\n<span class=\\"line\\"><span>net：指定网段</span></span>\\n<span class=\\"line\\"><span>port：指定端口</span></span>\\n<span class=\\"line\\"><span>portrange：指定端口范围</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>连接运算符</span></span>\\n<span class=\\"line\\"><span>and：所有的条件都满足</span></span>\\n<span class=\\"line\\"><span>or：只要满足一个条件</span></span>\\n<span class=\\"line\\"><span>not：取反，也可以用！</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,h as data};
