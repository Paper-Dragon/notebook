import{ah as i,ai as s,an as a,am as t}from"./app-8q9JYMeB.js";const n={};function r(l,e){return t(),s("div",null,e[0]||(e[0]=[a(`<h1 id="在windows11上构建和运行arm架构的docker容器" tabindex="-1"><a class="header-anchor" href="#在windows11上构建和运行arm架构的docker容器"><span>在Windows11上构建和运行ARM架构的Docker容器</span></a></h1><h2 id="安装-docker-desktop" tabindex="-1"><a class="header-anchor" href="#安装-docker-desktop"><span>安装 Docker Desktop</span></a></h2><p>访问 <a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noopener noreferrer">Docker 官网</a>下载最新版本 完成安装后，进入以下配置：</p><ul><li>打开 Docker Desktop Settings</li><li>导航至 <strong>General</strong> 选项</li><li>勾选 <strong>Use the WSL 2 based engine</strong></li></ul><h2 id="配置多架构构建环境" tabindex="-1"><a class="header-anchor" href="#配置多架构构建环境"><span>配置多架构构建环境</span></a></h2><p>启用 Buildx 工具：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> multiarch-builder</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --use</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>验证构建器状态：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>multiarch-builder 状态为 running</p><p>安装 QEMU 模拟支持：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --privileged</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> multiarch/qemu-user-static</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目"><span>构建项目</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/arm64</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sherpa-restful-api:1.0.0</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const o=i(n,[["render",r]]),d=JSON.parse('{"path":"/note-book/Docker/%E5%9C%A8Windows11%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%92%8C%E8%BF%90%E8%A1%8CARM%E6%9E%B6%E6%9E%84%E7%9A%84Docker%E5%AE%B9%E5%99%A8.html","title":"在Windows11上构建和运行ARM架构的Docker容器","lang":"zh-CN","frontmatter":{"description":"在Windows11上构建和运行ARM架构的Docker容器 安装 Docker Desktop 访问 Docker 官网下载最新版本 完成安装后，进入以下配置： 打开 Docker Desktop Settings 导航至 General 选项 勾选 Use the WSL 2 based engine 配置多架构构建环境 启用 Buildx 工具：...","head":[["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Docker/%E5%9C%A8Windows11%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%92%8C%E8%BF%90%E8%A1%8CARM%E6%9E%B6%E6%9E%84%E7%9A%84Docker%E5%AE%B9%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"在Windows11上构建和运行ARM架构的Docker容器"}],["meta",{"property":"og:description","content":"在Windows11上构建和运行ARM架构的Docker容器 安装 Docker Desktop 访问 Docker 官网下载最新版本 完成安装后，进入以下配置： 打开 Docker Desktop Settings 导航至 General 选项 勾选 Use the WSL 2 based engine 配置多架构构建环境 启用 Buildx 工具：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-21T10:11:32.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-21T10:11:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在Windows11上构建和运行ARM架构的Docker容器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-21T10:11:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PaperDragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"]]},"git":{"createdTime":1742551892000,"updatedTime":1742551892000,"contributors":[{"name":"dependabot[bot]","username":"dependabot[bot]","email":"49699333+dependabot[bot]@users.noreply.github.com","commits":1,"url":"https://github.com/dependabot[bot]"}]},"readingTime":{"minutes":0.46,"words":137},"filePathRelative":"note-book/Docker/在Windows11上构建和运行ARM架构的Docker容器.md","localizedDate":"2025年3月21日","excerpt":"\\n<h2>安装 Docker Desktop</h2>\\n<p>访问 <a href=\\"https://www.docker.com/products/docker-desktop/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker 官网</a>下载最新版本\\n完成安装后，进入以下配置：</p>\\n<ul>\\n<li>打开 Docker Desktop Settings</li>\\n<li>导航至 <strong>General</strong> 选项</li>\\n<li>勾选 <strong>Use the WSL 2 based engine</strong></li>\\n</ul>","autoDesc":true}');export{o as comp,d as data};
