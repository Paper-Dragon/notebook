import{ah as a,ai as t,ar as i,am as s}from"./app-huHx0yVU.js";const n={};function h(r,e){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="使用netcat检测udp端口连通性" tabindex="-1"><a class="header-anchor" href="#使用netcat检测udp端口连通性"><span>使用Netcat检测UDP端口连通性</span></a></h1><blockquote><p>在进行网络故障排查或者服务器性能优化的过程中，可能需要检测特定的 UDP 端口是否处于开放状态。本文记录了nc检测方法。</p></blockquote><p>Netcat 是一个简单但强大的网络工具，它可以读取和写入 TCP 或 UDP 数据流。这里是如何使用 Netcat 来测试一个 UDP 端口是否打开的步骤</p><h2 id="在目标服务器上启动监听" tabindex="-1"><a class="header-anchor" href="#在目标服务器上启动监听"><span>在目标服务器上启动监听</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -lu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12345</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里 <code>-l</code> 选项是告诉 Netcat 在指定端口上监听，而 <code>-u</code> 选项是让 Netcat 使用 UDP 而不是默认的 TCP。</p><h2 id="从另一台机器发送udp数据包" tabindex="-1"><a class="header-anchor" href="#从另一台机器发送udp数据包"><span>从另一台机器发送UDP数据包</span></a></h2><p>在另一台可以访问目标服务器的机器上，运行以下命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test message&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">target-i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12345</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在这个命令中，<code>&lt;target-ip&gt;</code> 需要替换为目标服务器的 IP 地址，<code>12345</code> 是你要测试的端口号。<code>echo -n &quot;test message&quot;</code> 是发送到目标服务器的消息内容。</p><h2 id="查看结果" tabindex="-1"><a class="header-anchor" href="#查看结果"><span>查看结果</span></a></h2><p>如果UDP端口是开放的，并且没有被防火墙阻止，那么在第一步中启动的Netcat实例应该会显示接收到的&quot;test message&quot;。</p><p>请注意，这种测试方法只能工作在网络中没有防火墙阻挡 UDP 传输的情况下。如果有防火墙阻挡，那么你需要在防火墙中打开相应的 UDP 端口，或者使用其他方法进行测试。</p>',13)]))}const l=a(n,[["render",h]]),p=JSON.parse('{"path":"/note-book/LinuxOperaSystem/%E4%BD%BF%E7%94%A8Netcat%E6%A3%80%E6%B5%8BUDP%E7%AB%AF%E5%8F%A3%E8%BF%9E%E9%80%9A%E6%80%A7.html","title":"使用Netcat检测UDP端口连通性","lang":"zh-CN","frontmatter":{"description":"使用Netcat检测UDP端口连通性 在进行网络故障排查或者服务器性能优化的过程中，可能需要检测特定的 UDP 端口是否处于开放状态。本文记录了nc检测方法。 Netcat 是一个简单但强大的网络工具，它可以读取和写入 TCP 或 UDP 数据流。这里是如何使用 Netcat 来测试一个 UDP 端口是否打开的步骤 在目标服务器上启动监听 这里 -l ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用Netcat检测UDP端口连通性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-28T09:20:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/LinuxOperaSystem/%E4%BD%BF%E7%94%A8Netcat%E6%A3%80%E6%B5%8BUDP%E7%AB%AF%E5%8F%A3%E8%BF%9E%E9%80%9A%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"使用Netcat检测UDP端口连通性"}],["meta",{"property":"og:description","content":"使用Netcat检测UDP端口连通性 在进行网络故障排查或者服务器性能优化的过程中，可能需要检测特定的 UDP 端口是否处于开放状态。本文记录了nc检测方法。 Netcat 是一个简单但强大的网络工具，它可以读取和写入 TCP 或 UDP 数据流。这里是如何使用 Netcat 来测试一个 UDP 端口是否打开的步骤 在目标服务器上启动监听 这里 -l ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-28T09:20:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-28T09:20:17.000Z"}]]},"git":{"createdTime":1724836817000,"updatedTime":1724836817000,"contributors":[{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"ae35dfe83cc28e878cebd5e984cf386841c925a1","time":1724836817000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"使用Netcat检测UDP端口连通性"}]},"readingTime":{"minutes":1.25,"words":374},"filePathRelative":"note-book/LinuxOperaSystem/使用Netcat检测UDP端口连通性.md","excerpt":"\\n<blockquote>\\n<p>在进行网络故障排查或者服务器性能优化的过程中，可能需要检测特定的 UDP 端口是否处于开放状态。本文记录了nc检测方法。</p>\\n</blockquote>\\n<p>Netcat 是一个简单但强大的网络工具，它可以读取和写入 TCP 或 UDP 数据流。这里是如何使用 Netcat 来测试一个 UDP 端口是否打开的步骤</p>\\n<h2>在目标服务器上启动监听</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">nc</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -lu</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 12345</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{l as comp,p as data};
