import{ah as i,ai as a,an as n,am as e}from"./app-BNvQg33A.js";const l={};function d(t,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="lfs编译笔记以深入了解linux" tabindex="-1"><a class="header-anchor" href="#lfs编译笔记以深入了解linux"><span>LFS编译笔记以深入了解Linux</span></a></h1><h2 id="lf规定的包" tabindex="-1"><a class="header-anchor" href="#lf规定的包"><span>LF规定的包</span></a></h2><table><thead><tr><th>类型</th><th>包</th></tr></thead><tbody><tr><td><em>LSB Core:</em></td><td>Bash, Bc, Binutils, Coreutils, Diffutils, File, Findutils,Gawk, Grep, Gzip, M4, Man-DB, Ncurses, Procps, Psmisc, Sed,Shadow, Tar, Util-linux, Zlib</td></tr><tr><td><em>LSB Desktop:</em></td><td>无</td></tr><tr><td><em>LSB Runtime Languages:</em></td><td>Perl, Python</td></tr><tr><td><em>LSB Imaging:</em></td><td>无</td></tr><tr><td><em>LSB Gtk3和LSB Graphics (试用):</em></td><td>无</td></tr></tbody></table><h2 id="lfs宿主机体质要求" tabindex="-1"><a class="header-anchor" href="#lfs宿主机体质要求"><span>LFS宿主机体质要求</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Bash-3.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/bin/sh </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">必须是到</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的符号链接或硬连接</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Binutils-2.13.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (比 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 更新的版本未经测试，不推荐使用</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Bison-2.7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/usr/bin/yacc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">必须是到</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的链接，或者是一个执行</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bison</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的小脚本</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Coreutils-6.9</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Diffutils-2.8.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Findutils-4.2.31</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Gawk-4.0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/usr/bin/awk </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">必须是到</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gawk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的链接</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GCC-4.8，包括</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> C++</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 编译器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (比 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12.2.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 更新的版本未经测试，不推荐使用</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)。C 和 C++ 标准库 (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">包括头文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) 也必须可用，这样 C++ 编译器才能构建宿主环境的程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Grep-2.5.1a</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Gzip-1.3.12</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Linux</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Kernel-3.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内核版本的要求是为了符合第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章和第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章中编译</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> glibc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 时开发者推荐的配置选项。udev也要求一定的内核版本。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果宿主内核比</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 更早，您需要将内核升级到较新的版本。升级内核有两种方法，如果您的发行版供应商提供了</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 或更新的内核软件包，您可以直接安装它。如果供应商没有提供一个足够新的内核包，或者您不想安装它，您可以自己编译内核。编译内核和配置启动引导器</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (假设宿主使用 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">GRUB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) 的步骤在第 10 章中。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M4-1.4.10</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Make-4.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Patch-2.5.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Perl-5.8.8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Python-3.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sed-4.1.5</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Tar-1.22</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Texinfo-4.7</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Xz-5.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="宿主机体检" tabindex="-1"><a class="header-anchor" href="#宿主机体检"><span>宿主机体检</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">version-check.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Simple script to list version numbers of critical development tools</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">export LC_ALL=C</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bash --version | head -n1 | cut -d&quot; &quot; -f2-4</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">MYSH=$(readlink -f /bin/sh)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo &quot;/bin/sh -&gt; $MYSH&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo $MYSH | grep -q bash || echo &quot;ERROR: /bin/sh does not point to bash&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unset MYSH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo -n &quot;Binutils: &quot;; ld --version | head -n1 | cut -d&quot; &quot; -f3-</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bison --version | head -n1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ -h /usr/bin/yacc ]; then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo &quot;/usr/bin/yacc -&gt; \`readlink -f /usr/bin/yacc\`&quot;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">elif [ -x /usr/bin/yacc ]; then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo yacc is \`/usr/bin/yacc --version | head -n1\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">else</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo &quot;yacc not found&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo -n &quot;Coreutils: &quot;; chown --version | head -n1 | cut -d&quot;)&quot; -f2</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">diff --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">find --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gawk --version | head -n1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ -h /usr/bin/awk ]; then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo &quot;/usr/bin/awk -&gt; \`readlink -f /usr/bin/awk\`&quot;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">elif [ -x /usr/bin/awk ]; then</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo awk is \`/usr/bin/awk --version | head -n1\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">else</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo &quot;awk not found&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gcc --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">g++ --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">grep --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gzip --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cat /proc/version</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">m4 --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">make --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">patch --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo Perl \`perl -V:version\`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">python3 --version</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sed --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tar --version | head -n1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">makeinfo --version | head -n1 # texinfo version</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">xz --version | head -n1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">echo &#39;int main(){}&#39; &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ -x dummy ]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> then echo &quot;g++ compilation OK&quot;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> else echo &quot;g++ compilation failed&quot;; fi</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rm -f dummy.c dummy</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version-check.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linux-常用分区-科普" tabindex="-1"><a class="header-anchor" href="#linux-常用分区-科普"><span>Linux 常用分区(科普)</span></a></h2><p>还有其他几个并非必须，但在设计磁盘布局时应当考虑的分区。下面的列表并不完整，但可以作为一个参考。</p><ul><li><p>/boot – 高度推荐。这个分区可以存储内核和其他引导信息。为了减少大磁盘可能引起的问题，建议将 /boot 分区设为第一块磁盘的第一个分区。为它分配 200 MB 就绰绰有余。</p></li><li><p>/boot/efi – EFI 系统分区，在使用 UEFI 引导系统时是必要的。阅读 BLFS 页面 以获得详细信息。</p></li><li><p>/home – 高度推荐。独立的 /home 分区可以在多个发行版或 LFS 系统之间共享 home 目录和用户设置。它的尺寸一般很大，取决于硬盘的可用空间。</p></li><li><p>/usr – 在 LFS 中，/bin，/lib，以及 /sbin 是指向 /usr 中对应目录的符号链接。因此，/usr 包含系统运行需要的所有二进制程序和库。对于 LFS，通常不需要为 /usr 创建单独的分区。如果仍然需要这种配置，需要为其建立一个能够容纳系统中所有程序和库的分区。同时，在这种配置下，根分区可以非常小 (可能只需要一吉字节)，因此它适用于瘦客户端或者无盘工作站 (此时 /usr 从远程服务器挂载)。然而，需要注意的是，必须使用 initramfs (LFS 没有包含)，才能引导具有单独的 /usr 分区的系统。</p></li><li><p>/opt – 这个目录往往被用于在 BLFS 中安装 Gnome 或 KDE 等大型软件，以免把大量文件塞进 /usr 目录树。如果将它划分为独立分区，5 到 10 GB 一般就足够了。</p></li><li><p>/tmp – 一个独立的 /tmp 分区是很少见的，但在配置瘦客户端时很有用。如果分配了这个分区，大小一般不会超过几个 GB。</p></li><li><p>/usr/src – 将它划分为独立分区，可以用于存储 BLFS 源代码，并在多个 LFS 系统之间共享它们。它也可以用于编译 BLFS 软件包。30-50 GB 的分区可以提供足够的空间。</p></li></ul><p>如果您希望在启动时自动挂载任何一个独立的分区，就要在 /etc/fstab 文件中说明。有关指定分区的细节将在第 10.2 节 “创建 /etc/fstab 文件” 中讨论。</p><h2 id="第一步创建的分区和用途" tabindex="-1"><a class="header-anchor" href="#第一步创建的分区和用途"><span>第一步创建的分区和用途</span></a></h2><h3 id="创建一个有限的目录树" tabindex="-1"><a class="header-anchor" href="#创建一个有限的目录树"><span>创建一个有限的目录树</span></a></h3><p>以 <code>root</code> 身份，执行以下命令创建所需的目录布局：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/{etc,var}</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/{bin,lib,sbin}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lib</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sbin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> usr/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$i</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$i</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;"> x86_64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/lib64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">esac</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建交叉编译器目录" tabindex="-1"><a class="header-anchor" href="#创建交叉编译器目录"><span>创建交叉编译器目录</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tools</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="第一步创建非特权用户" tabindex="-1"><a class="header-anchor" href="#第一步创建非特权用户"><span>第一步创建非特权用户</span></a></h2><h4 id="添加非特权用户" tabindex="-1"><a class="header-anchor" href="#添加非特权用户"><span>添加非特权用户</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">groupadd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">useradd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/null</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 设置</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 为用户</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的默认</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 添加用户</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 到组</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-m</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 为用户</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lfs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 创建一个主目录。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /dev/null</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 将模板目录设置为空设备文件，从而不从默认模板目录</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (/etc/skel) 复制文件到新的主目录。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lfs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 要创建的用户的名称。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="给非特权用户授权控制lfs" tabindex="-1"><a class="header-anchor" href="#给非特权用户授权控制lfs"><span>给非特权用户授权控制lfs</span></a></h4><p>将 <code>lfs</code> 设为 <code>$LFS</code> 中所有目录的所有者，使 <code>lfs</code> 对它们拥有完全访问权：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chown -v lfs $LFS/{usr{,/*},lib,var,etc,bin,sbin,tools}</span></span>
<span class="line"><span>case $(uname -m) in</span></span>
<span class="line"><span> x86_64) chown -v lfs $LFS/lib64 ;;</span></span>
<span class="line"><span>esac</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="非特权用户环境变量" tabindex="-1"><a class="header-anchor" href="#非特权用户环境变量"><span>非特权用户环境变量</span></a></h4><blockquote><p><strong>bash</strong> 创建两个新的启动脚本</p><p>初始的 shell一般是一个<em>登录</em> shell。它读取宿主系统的 <code>/etc/profile</code> 文件 (可能包含一些设置和环境变量)，然后读取 <code>.bash_profile</code>。</p></blockquote><p>创建.bash_profile</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">~/.bash_profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">exec env -i HOME=$HOME TERM=$TERM PS1=&#39;\\u:\\w\\$ &#39; /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i.../bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 命令，新建一个除了</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HOME,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TERM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 以及</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PS1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 外没有任何环境变量的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建.bashrc ( <em>非登录</em> shell)</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">~/.bashrc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">set +h</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">umask 022</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LFS=/mnt/lfs</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LC_ALL=POSIX</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LFS_TGT=$(uname -m)-lfs-linux-gnu</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PATH=/usr/bin</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">if [ ! -L /bin ]; then PATH=/bin:$PATH; fi</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PATH=$LFS/tools/bin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CONFIG_SITE=$LFS/usr/share/config.site</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">export LFS LC_ALL LFS_TGT PATH CONFIG_SITE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +h</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 命令关闭</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的散列功能。一般情况下，散列是很有用的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ——</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 使用一个散列表维护各个可执行文件的完整路径，这样就不用每次都在</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 指定的目录中搜索可执行文件。然而，在构建</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 时，我们希望总是使用最新安装的工具。因此，需要关闭散列功能，使得</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 在运行程序时总是搜索</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH。这样，一旦</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tools/bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 中有新的工具可用，shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 就能够找到它们，而不是使用之前记忆在散列表中，由宿主发行版提供的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 或</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 中的工具。</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">umask</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 022</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 将用户的文件创建掩码</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (umask) 设定为 022，保证只有文件所有者可以写新创建的文件和目录，但任何人都可读取、执行它们。(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">如果</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">系统调用使用默认模式，则新文件将具有权限模式</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 644，而新目录具有权限模式</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 755</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LFS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/mnt/lfs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境变量必须被设定为之前选择的挂载点。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LC_ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">POSIX</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> LC_ALL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境变量控制某些程序的本地化行为，使得它们以特定国家的语言和惯例输出消息。将</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LC_ALL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 设置为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> “POSIX”</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 或者</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> “C”</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">这两种设置是等价的</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">可以保证在</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chroot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境中所有命令的行为完全符合预期，而与宿主的本地化设置无关。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LFS_TGT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">uname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)-lfs-linux-gnu</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> LFS_TGT变量设定了一个非默认，但与宿主系统兼容的机器描述符。该描述符被用于构建交叉编译器和交叉编译临时工具链。工具链技术说明包含了关于这个描述符的更多信息。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/bin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 许多现代</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Linux</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 发行版合并了</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin。在这种情况下，标准</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 变量只需要被设定为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin，即可满足第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章的环境。否则，后续命令将会增加</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 到搜索路径中。</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -L</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /bin ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 如果</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 不是符号链接，则它需要被添加到</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 变量中。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tools/bin:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 我们将</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tools/bin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 附加在默认的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境变量之前，这样在第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章中，我们一旦安装了新的程序，shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 就能立刻使用它们。这与关闭散列功能相结合，降低了在第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章环境中新程序可用时错误地使用宿主系统中旧程序的风险。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CONFIG_SITE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/share/config.site</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 在第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章和第</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 章中，如果没有设定这个变量，configure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 脚本可能会从宿主系统的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/share/config.site</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 加载一些发行版特有的配置信息。覆盖这一默认路径，避免宿主系统可能造成的污染。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调整某些linux自己造了个环境变量对过程产生影响" tabindex="-1"><a class="header-anchor" href="#调整某些linux自己造了个环境变量对过程产生影响"><span>调整某些Linux自己造了个环境变量对过程产生影响</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /etc/bash.bashrc ] || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/bash.bashrc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/bash.bashrc.NOUSE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="登录shell和非登陆shell读取配置文件的区别" tabindex="-1"><a class="header-anchor" href="#登录shell和非登陆shell读取配置文件的区别"><span>登录shell和非登陆shell读取配置文件的区别</span></a></h4><ul><li>https://www.cnblogs.com/pigwan7/p/9593540.html</li></ul><h2 id="交叉工具链相关的内容" tabindex="-1"><a class="header-anchor" href="#交叉工具链相关的内容"><span>交叉工具链相关的内容</span></a></h2><h3 id="交叉工具链" tabindex="-1"><a class="header-anchor" href="#交叉工具链"><span>交叉工具链</span></a></h3><ul><li>binutils 包含汇编器、链接器以及其他用于处理目标文件的工具。</li><li>GCC 软件包包含 GNU 编译器集合，其中有 C 和 C++ 编译器。</li><li>Linux API 头文件 (在 linux-5.19.2.tar.xz 中) 导出内核 API 供 Glibc 使用。</li><li>Glibc 软件包包含主要的 C 语言库。它提供用于分配内存、检索目录、打开和关闭文件、读写文件、字符串处理、模式匹配、算术等用途的基本子程序。</li><li>Libstdc++ 是 C++ 标准库。我们需要它才能编译 C++ 代码 (GCC 的一部分用 C++编写)。但在构建<a href="https://lfs.xry111.site/zh_CN/11.2-systemd/chapter05/gcc-pass1.html" target="_blank" rel="noopener noreferrer">第一遍的GCC</a>时我们不得不暂缓安装它，因为它依赖于当时还没有安装到目标目录的 Glibc。</li></ul><h3 id="交叉工具链相关工具" tabindex="-1"><a class="header-anchor" href="#交叉工具链相关工具"><span>交叉工具链相关工具</span></a></h3><ul><li>M4 软件包包含一个宏处理器。</li><li>Ncurses 软件包包含使用时不需考虑终端特性的字符屏幕处理函数库</li><li>Bash 软件包包含 Bourne-Again SHell</li><li>Coreutils 软件包包含用于显示和设定系统基本属性的工具。</li><li>Diffutils 软件包包含显示文件或目录之间差异的程序。</li><li>File 软件包包含用于确定给定文件类型的工具。</li><li>Findutils 软件包包含用于查找文件的程序。这些程序能够递归地搜索目录树，以及创建、维护和搜索文件数据库 (一般比递归搜索快，但在数据库最近没有更新时不可靠)。</li><li>Gawk 软件包包含操作文本文件的程序。</li><li>Grep 软件包包含在文件内容中进行搜索的程序。</li><li>Gzip 软件包包含压缩和解压缩文件的程序。</li><li>Make 软件包包含一个程序，用于控制从软件包源代码生成可执行文件和其他非源代码文件的过程。</li><li>Patch 软件包包含通过应用 “补丁” 文件，修改或创建文件的程序，补丁文件通常是 <strong>diff</strong> 程序创建的。</li><li>Sed 软件包包含一个流编辑器。</li><li>Tar 软件包提供创建 tar 归档文件，以及对归档文件进行其他操作的功能。Tar 可以对已经创建的归档文件进行提取文件，存储新文件，更新文件，或者列出文件等操作。</li><li>Xz 软件包包含文件压缩和解压缩工具，它能够处理 lzma 和新的 xz 压缩文件格式。使用 <strong>xz</strong> 压缩文本文件，可以得到比传统的 <strong>gzip</strong> 或 <strong>bzip2</strong> 更好的压缩比。</li><li>2 - Binutils 包含汇编器、链接器以及其他用于处理目标文件的工具。 <ul><li>Binutils 的源码包中内置了一份陈旧的 libtool 拷贝。这个版本的 libtool 没有 sysroot 支持，因此产生的二进制代码会错误地链接到宿主系统提供的库。绕过这个问题：</li></ul></li><li>2 - GCC 软件包包含 GNU 编译器集合，其中有 C 和 C++ 编译器。 <ul><li>由于我们正在交叉编译 GCC，此时不可能用编译得到的 GCC 二进制程序构建用于目标系统的运行库(<code>libgcc</code> 和 <code>libstdc++</code>)，这是因为交叉编译得到的二进制程序无法在宿主系统运行。GCC构建系统在默认情况下会试图使用宿主系统提供的 C 和 C++ 编译器来绕过这个问题。但是，由于 GCC的运行库未必能用不同版本的 GCC 构建，使用宿主系统的编译器可能导致构建失败。该选项保证使用第一遍构建的 GCC编译运行库，以防止出现此问题。</li></ul></li></ul><h2 id="在chroot中构建" tabindex="-1"><a class="header-anchor" href="#在chroot中构建"><span>在Chroot中构建</span></a></h2><h3 id="改变权限" tabindex="-1"><a class="header-anchor" href="#改变权限"><span>改变权限</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root:root</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/{usr,lib,var,etc,bin,sbin,tools}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;"> x86_64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root:root</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/lib64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">esac</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="与正在运行的内核之间建立一些通信机制" tabindex="-1"><a class="header-anchor" href="#与正在运行的内核之间建立一些通信机制"><span>与正在运行的内核之间建立一些通信机制</span></a></h3><p>内核对外提供了一些文件系统，以便自己和用户空间进行通信。它们是虚拟文件系统，并不占用磁盘空间，其内容保留在内存中。</p><h4 id="首先创建这些文件系统的挂载点" tabindex="-1"><a class="header-anchor" href="#首先创建这些文件系统的挂载点"><span>首先创建这些文件系统的挂载点：</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -pv $LFS/{dev,proc,sys,run}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>正常的引导过程中，内核自动挂载 <code>devtmpfs</code> 到 <code>/dev</code>，并允许在设备被发现或访问时动态地创建设备节点。设备节点通常由内核和 Udev 在系统引导时创建。然而，我们的新系统还没有 Udev，也没有经过引导过程，因此必须手工挂载和填充 <code>/dev</code>。这可以通过绑定挂载宿主系统的 <code>/dev</code> 目录来实现。绑定挂载是一种特殊挂载类型，它允许在另外的位置创建某个目录或挂载点的映像。运行以下命令进行绑定挂载：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mount -v --bind /dev $LFS/dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="挂载其余的虚拟内核文件系统" tabindex="-1"><a class="header-anchor" href="#挂载其余的虚拟内核文件系统"><span>挂载其余的虚拟内核文件系统:</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mount -v --bind /dev/pts $LFS/dev/pts</span></span>
<span class="line"><span>mount -vt proc proc $LFS/proc</span></span>
<span class="line"><span>mount -vt sysfs sysfs $LFS/sys</span></span>
<span class="line"><span>mount -vt tmpfs tmpfs $LFS/run</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在某些宿主系统上，<code>/dev/shm</code> 是一个指向 <code>/run/shm</code> 的符号链接。我们已经在 /run 下挂载了 tmpfs 文件系统，因此在这里只需要创建一个目录。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>if [ -h $LFS/dev/shm ]; then</span></span>
<span class="line"><span> mkdir -pv $LFS/$(readlink $LFS/dev/shm)</span></span>
<span class="line"><span>fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="进入chroot" tabindex="-1"><a class="header-anchor" href="#进入chroot"><span>进入chroot</span></a></h3><h4 id="运行命令进入root" tabindex="-1"><a class="header-anchor" href="#运行命令进入root"><span>运行命令进入root</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chroot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$LFS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HOME=/root</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TERM=&quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$TERM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PS1=&#39;(lfs chroot) \\u:\\w\\$ &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PATH=/usr/bin:/usr/sbin</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --login</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">传递</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 选项给</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 命令，可以清除</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chroot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境中的所有环境变量</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建一些位于根目录中的目录" tabindex="-1"><a class="header-anchor" href="#创建一些位于根目录中的目录"><span>创建一些位于根目录中的目录</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /{boot,home,mnt,opt,srv}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/{opt,sysconfig}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /lib/firmware</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /media/{floppy,cdrom}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/{,local/}{include,src}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/{bin,lib,sbin}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/{,local/}share/{color,dict,doc,info,locale,man}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/{,local/}share/{misc,terminfo,zoneinfo}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/{,local/}share/man/man{1..8}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/{cache,local,log,mail,opt,spool}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/lib/{color,misc,locate}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sfv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/run</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sfv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /run/lock</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/lock</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0750</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /root</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -dv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1777</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /tmp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/tmp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LF规定的目录结构 https://refspecs.linuxfoundation.org/fhs.shtml</p><h4 id="创建必要的文件和符号链接" tabindex="-1"><a class="header-anchor" href="#创建必要的文件和符号链接"><span>创建必要的文件和符号链接</span></a></h4><h5 id="etc-mtab" tabindex="-1"><a class="header-anchor" href="#etc-mtab"><span>/etc/mtab</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /proc/self/mounts</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/mtab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="etc-hosts" tabindex="-1"><a class="header-anchor" href="#etc-hosts"><span>/etc/hosts</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">127.0.0.1 localhost $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hostname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">::1 localhost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="etc-passwd" tabindex="-1"><a class="header-anchor" href="#etc-passwd"><span>/etc/passwd</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/passwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">root:x:0:0:root:/root:/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bin:x:1:1:bin:/dev/null:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">daemon:x:6:6:Daemon User:/dev/null:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">messagebus:x:18:18:D-Bus Message Daemon User:/run/dbus:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-gateway:x:73:73:systemd Journal Gateway:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-remote:x:74:74:systemd Journal Remote:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-upload:x:75:75:systemd Journal Upload:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-network:x:76:76:systemd Network Management:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-resolve:x:77:77:systemd Resolver:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-timesync:x:78:78:systemd Time Synchronization:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-coredump:x:79:79:systemd Core Dumper:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">uuidd:x:80:80:UUID Generation Daemon User:/dev/null:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-oom:x:81:81:systemd Out Of Memory Daemon:/:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nobody:x:65534:65534:Unprivileged User:/dev/null:/usr/bin/false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="etc-group" tabindex="-1"><a class="header-anchor" href="#etc-group"><span>/etc/group</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">root:x:0:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bin:x:1:daemon</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sys:x:2:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kmem:x:3:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tape:x:4:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tty:x:5:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">daemon:x:6:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">floppy:x:7:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">disk:x:8:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">lp:x:9:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">dialout:x:10:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">audio:x:11:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">video:x:12:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">utmp:x:13:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">usb:x:14:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cdrom:x:15:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">adm:x:16:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">messagebus:x:18:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal:x:23:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">input:x:24:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mail:x:34:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kvm:x:61:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-gateway:x:73:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-remote:x:74:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-journal-upload:x:75:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-network:x:76:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-resolve:x:77:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-timesync:x:78:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-coredump:x:79:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">uuidd:x:80:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">systemd-oom:x:81:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">wheel:x:97:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">users:x:999:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nogroup:x:65534:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="刷新环境变量" tabindex="-1"><a class="header-anchor" href="#刷新环境变量"><span>刷新环境变量</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --login</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="初始化日志文件" tabindex="-1"><a class="header-anchor" href="#初始化日志文件"><span>初始化日志文件</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/{btmp,lastlog,faillog,wtmp}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chgrp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> utmp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/lastlog</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 664</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/lastlog</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/btmp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建临时工具" tabindex="-1"><a class="header-anchor" href="#构建临时工具"><span>构建临时工具</span></a></h3><ul><li>Gettext 软件包包含国际化和本地化工具，它们允许程序在编译时加入 NLS (本地语言支持) 功能，使它们能够以用户的本地语言输出消息</li><li>Bison 软件包包含语法分析器生成器。</li><li>Perl 软件包包含实用报表提取语言。</li><li>Python 3 软件包包含 Python 开发环境。它被用于面向对象编程，编写脚本，为大型程序建立原型，或者开发完整的应用。</li><li>Texinfo 软件包包含阅读、编写和转换 info 页面的程序。</li><li>Util-linux 软件包包含一些工具程序。</li></ul><h3 id="安装基本系统软件" tabindex="-1"><a class="header-anchor" href="#安装基本系统软件"><span>安装基本系统软件</span></a></h3><p>https://lfs.xry111.site/zh_CN/11.2-systemd/chapter08/chapter08.html</p><ul><li>Man-pages 软件包包含 2,200 多个 man 页面。</li><li>Iana-Etc 软件包包含网络服务和协议的数据。</li><li>Glibc 软件包包含主要的 C语言库。它提供用于分配内存、检索目录、打开和关闭文件、读写文件、字符串处理、模式匹配、算术等用途的基本子程序。</li><li>Zlib 软件包包含一些程序使用的压缩和解压缩子程序。</li><li>Bzip2 软件包包含用于压缩和解压缩文件的程序。使用 <strong>bzip2</strong> 压缩文本文件可以获得比传统的 <strong>gzip</strong> 优秀许多的压缩比。</li><li>Xz 软件包包含文件压缩和解压缩工具，它能够处理 lzma 和新的 xz 压缩文件格式。使用 <strong>xz</strong> 压缩文本文件，可以得到比传统的 <strong>gzip</strong> 或 <strong>bzip2</strong> 更好的压缩比。</li><li>Zstandard 是一种实时压缩算法，提供了较高的压缩比。它具有很宽的压缩比/速度权衡范围，同时支持具有非常快速的解压缩。</li><li>File 软件包包含用于确定给定文件类型的工具。</li><li>Readline 软件包包含一些提供命令行编辑和历史记录功能的库。</li><li>M4 软件包包含一个宏处理器。</li><li>Bc 软件包包含一个任意精度数值处理语言。</li><li>Flex 软件包包含一个工具，用于生成在文本中识别模式的程序。</li><li>Tcl 软件包包含工具命令语言，它是一个可靠的通用脚本语言。Except 软件包是用 Tcl 语言编写的.</li><li>Expect 软件包包含通过脚本控制的对话，自动化 <strong>telnet</strong>，<strong>ftp</strong>，<strong>passwd</strong>，<strong>fsck</strong>，<strong>rlogin</strong>，以及 <strong>tip</strong> 等交互应用的工具。Expect 对于测试这类程序也很有用，它简化了这类通过其他方式很难完成的工作。DejaGnu 框架是使用 Expect 编写的。</li><li>DejaGnu 包含使用 GNU 工具运行测试套件的框架。它是用expect 编写的，后者又使用Tcl (工具命令语言)。</li><li>Binutils 包含汇编器、链接器以及其他用于处理目标文件的工具。</li><li>GMP 软件包包含提供任意精度算术函数的数学库。</li><li>MPFR 软件包包含多精度数学函数。</li><li>MPC 软件包包含一个任意高精度，且舍入正确的复数算术库。</li><li>Attr 软件包包含管理文件系统对象扩展属性的工具。</li><li>Acl 软件包包含管理访问控制列表的工具，访问控制列表能够更细致地自由定义文件和目录的访问权限。</li><li>ibcap 软件包为 Linux 内核提供的 POSIX 1003.1e 权能字实现用户接口。这些权能字是 root 用户的最高特权分割成的一组不同权限。</li><li>Shadow 软件包包含安全地处理密码的程序。</li><li>GCC 软件包包含 GNU 编译器集合，其中有 C 和 C++ 编译器。</li><li>pkg-config 软件包提供一个在软件包安装的配置和编译阶段，向构建工具传递头文件和/或库文件路径的工具。</li><li>Ncurses 软件包包含使用时不需考虑终端特性的字符屏幕处理函数库。</li><li>Sed 软件包包含一个流编辑器。</li><li>Psmisc 软件包包含显示正在运行的进程信息的程序。</li><li>Gettext 软件包包含国际化和本地化工具，它们允许程序在编译时加入 NLS (本地语言支持) 功能，使它们能够以用户的本地语言输出消息。</li><li>Bison 软件包包含语法分析器生成器。</li><li>Grep 软件包包含在文件内容中进行搜索的程序。</li><li>Bash 软件包包含 Bourne-Again SHell。</li><li>Libtool 软件包包含 GNU 通用库支持脚本。它在一个一致、可移植的接口下隐藏了使用共享库的复杂性。</li><li>GDBM 软件包包含 GNU 数据库管理器。它是一个使用可扩展散列的数据库函数库，工作方法和标准 UNIX dbm 类似。该库提供用于存储键值对、通过键搜索和获取数据，以及删除键和对应数据的原语。</li><li>Gperf 根据一组键值，生成完美散列函数。</li><li>Expat 软件包包含用于解析 XML 文件的面向流的 C 语言库。</li><li>Inetutils 软件包包含基本网络程序。</li><li>Less 软件包包含一个文本文件查看器。</li><li>Perl 软件包包含实用报表提取语言。</li><li>XML::Parser 模块是 James Clark 的 XML 解析器 Expat 的 Perl 接口。</li><li>Intltool 是一个从源代码文件中提取可翻译字符串的国际化工具</li><li>Autoconf 软件包包含生成能自动配置软件包的 shell 脚本的程序。</li><li>Automake 软件包包含自动生成 Makefile，以便和 Autoconf 一同使用的程序。</li><li>OpenSSL 软件包包含密码学相关的管理工具和库。它们被用于向其他软件包提供密码学功能，例如 OpenSSH，电子邮件程序和 Web 浏览器 (以访问 HTTPS 站点)。</li><li>Kmod 软件包包含用于加载内核模块的库和工具。</li><li>Libelf 是一个处理 ELF (可执行和可链接格式) 文件的库。</li><li>Libffi 库提供一个可移植的高级编程接口，用于处理不同调用惯例。这允许程序在运行时调用任何给定了调用接口的函数。</li><li>Python 3 软件包包含 Python 开发环境。它被用于面向对象编程，编写脚本，为大型程序建立原型，或者开发完整的应用。</li><li>Wheel 是 Python wheel 软件包标准格式的参考实现。</li><li>Ninja 是一个注重速度的小型构建系统。</li><li>Meson 是一个开放源代码构建系统，它的设计保证了非常快的执行速度，和尽可能高的用户友好性。</li><li>Coreutils 软件包包含用于显示和设定系统基本属性的工具。</li><li>Check 是一个 C 语言单元测试框架。</li><li>Diffutils 软件包包含显示文件或目录之间差异的程序。</li><li>Gawk 软件包包含操作文本文件的程序。</li><li>Findutils 软件包包含用于查找文件的程序。这些程序能够递归地搜索目录树，以及创建、维护和搜索文件数据库 (一般比递归搜索快，但在数据库最近没有更新时不可靠)。</li><li>Groff 软件包包含处理和格式化文本的程序。</li><li>GRUB 软件包包含 “大统一” (GRand Unified) 启动引导器。</li><li>Gzip 软件包包含压缩和解压缩文件的程序。</li><li>IPRoute2 软件包包含基于 IPv4 的基本和高级网络程序。</li><li>Kbd 软件包包含按键表文件、控制台字体和键盘工具。</li><li>Libpipeline 软件包包含用于灵活、方便地处理子进程流水线的库。</li><li>Make 软件包包含一个程序，用于控制从软件包源代码生成可执行文件和其他非源代码文件的过程。</li><li>Patch 软件包包含通过应用 “补丁” 文件，修改或创建文件的程序，补丁文件通常是 <strong>diff</strong> 程序创建的。</li><li>Tar 软件包提供创建 tar 归档文件，以及对归档文件进行其他操作的功能。Tar 可以对已经创建的归档文件进行提取文件，存储新文件，更新文件，或者列出文件等操作。</li><li>Texinfo 软件包包含阅读、编写和转换 info 页面的程序。</li><li>Vim 软件包包含强大的文本编辑器。</li><li>MarkupSafe 是一个为 XML/HTML/XHTML 标记语言实现字符串安全处理的 Python 模块。</li><li>Jinja2 是一个实现了简单的，Python 风格的模板语言的 Python 模块。</li><li>Systemd 软件包包含控制系统引导、运行和关闭的程序。</li><li>D-bus 是一个消息总线系统，即应用程序之间互相通信的一种简单方式。D-Bus 提供一个系统守护进程 (负责 “添加了新硬件” 或 “打印队列发生改变” 等事件)，并对每个用户登录会话提供一个守护进程 (负责一般用户程序的进程间通信)。另外，消息总线被构建在一个通用的一对一消息传递网络上，它可以被任意两个程序用于直接通信 (不需通过消息总线守护进程)。</li><li>Man-DB 软件包包含查找和阅读 man 页面的程序。</li><li>Procps-ng 软件包包含监视进程的程序。</li><li>Util-linux 软件包包含若干工具程序。这些程序中有处理文件系统、终端、分区和消息的工具。</li><li>E2fsprogs 软件包包含处理 <code>ext2</code>文件系统的工具。此外它也支持 <code>ext3</code> 和 <code>ext4</code> 日志文件系统。</li><li></li></ul><h3 id="软件包管理" tabindex="-1"><a class="header-anchor" href="#软件包管理"><span>软件包管理</span></a></h3><p>https://lfs.xry111.site/zh_CN/11.2-systemd/chapter08/pkgmgt.html</p><h2 id="系统配置" tabindex="-1"><a class="header-anchor" href="#系统配置"><span>系统配置</span></a></h2><h3 id="一般网络配置" tabindex="-1"><a class="header-anchor" href="#一般网络配置"><span>一般网络配置</span></a></h3><p>网络接口配置文件</p><ul><li>209 版本开始，systemd 提供一个名为 <strong>systemd-networkd</strong> 的网络配置守护进程，它能够用于基础网络配置。</li><li>213 版本起，可以用 <strong>systemd-resolved</strong> 代替静态 <code>/etc/resolv.conf</code> 文件处理域名解析。</li></ul><p><strong>systemd-networkd</strong> (以及 <strong>systemd-resolved</strong>) 的配置文件可以放置在 <code>/usr/lib/systemd/network</code> 或 <code>/etc/systemd/network</code> 中。</p><p><code>/etc/systemd/network</code> 中的配置文件优先级高于 <code>/usr/lib/systemd/network</code> 中的配置文件。有三种类型的配置文件：<code>.link</code>、<code>.netdev</code> 和 <code>.network</code> 文件。</p><p>要获得它们的详细描述和内容示例，参阅 <code>systemd-link(5)</code>、<code>systemd-netdev(5)</code> 和 <code>systemd-network(5)</code> man 手册页面。</p><h4 id="网络设备命名" tabindex="-1"><a class="header-anchor" href="#网络设备命名"><span>网络设备命名</span></a></h4><h5 id="自定义网络接口名" tabindex="-1"><a class="header-anchor" href="#自定义网络接口名"><span>自定义网络接口名</span></a></h5><p>可以使用三种不同方式：</p><ul><li><p>覆盖 udev 提供默认策略的 .link 文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ln -s /dev/null /etc/systemd/network/99-default.link</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>手动创建命名架构，例如将网络接口命名为“internet0”、“dmz0” 或 “lan0”。为此，在 /etc/systemd/network 中创建 .link 文件，为您的一个、一些或全部网络接口直接选择名称，或选择更好的命名架构。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/systemd/network/10-ether0.link &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span>[Match]</span></span>
<span class="line"><span># 将 MAC 地址替换为适用于您的网络设备的值</span></span>
<span class="line"><span>MACAddress=12:34:45:78:90:AB</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Link]</span></span>
<span class="line"><span>Name=ether0</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参阅 man 页面 systemd.link(5) 获得更多信息。</p></li><li><p>在 /boot/grub/grub.cfg 的内核命令行中传递选项 net.ifnames=0。</p></li></ul><h5 id="静态-ip-配置" tabindex="-1"><a class="header-anchor" href="#静态-ip-配置"><span>静态 IP 配置</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/systemd/network/10-eth-static.network</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Match]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Name=&lt;网络设备名&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Network]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Address=192.168.0.2/24</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Gateway=192.168.0.1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DNS=192.168.0.1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Domains=&lt;您的域名&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dhcp-配置" tabindex="-1"><a class="header-anchor" href="#dhcp-配置"><span>DHCP 配置</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/systemd/network/10-eth-dhcp.network</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Match]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Name=&lt;网络设备名&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Network]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">DHCP=ipv4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[DHCP]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">UseDomains=true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建-etc-resolv-conf" tabindex="-1"><a class="header-anchor" href="#创建-etc-resolv-conf"><span>创建/etc/resolv.conf</span></a></h4><h5 id="systemd-resloved配置" tabindex="-1"><a class="header-anchor" href="#systemd-resloved配置"><span>systemd-resloved配置</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@fedora ~]# ll /run/systemd/resolve/stub-resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-rw-r--r--</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd-resolve</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd-resolve</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 920</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 17:44</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /run/systemd/resolve/stub-resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@fedora ~]# ll /etc/resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lrwxrwxrwx.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 39</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Feb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10:06</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/resolv.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">../run/systemd/resolve/stub-resolv.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>静态配置</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/resolv.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># Begin /etc/resolv.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">domain &lt;您的域名&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nameserver &lt;您的主要域名服务器 IP 地址&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nameserver &lt;您的次要域名服务器 IP 地址&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"># End /etc/resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">可以省略</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> domain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 语句，或使用一条</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> search</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 语句代替它。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置系统主机名" tabindex="-1"><a class="header-anchor" href="#配置系统主机名"><span>配置系统主机名</span></a></h4><p>在引导过程中，<code>/etc/hostname</code> 被用于设定系统主机名。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&lt;lfs&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/hostname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="自定义-etc-hosts-文件" tabindex="-1"><a class="header-anchor" href="#自定义-etc-hosts-文件"><span>自定义/etc/hosts 文件</span></a></h4><p>选择一个全限定域名 (FQDN)，和可能的别名，以供 <code>/etc/hosts</code>文件使用。如果使用静态 IP 地址，您还需要确定要使用的 IP 地址。hosts 文件条目的语法是：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>IP_地址 主机名.域名 别名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>除非该计算机可以从 Internet 访问 (即拥有一个注册域名，并分配了一个有效的 IP 地址段 —— 多数用户没有分配有效IP)，确认使用的 IP 地址属于私网 IP 范围。有效的范围是：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>私网地址范围 公共前缀长度</span></span>
<span class="line"><span>10.0.0.1 - 10.255.255.254 8</span></span>
<span class="line"><span>172.x.0.1 - 172.x.255.254 16</span></span>
<span class="line"><span>192.168.y.1 - 192.168.y.254 24</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>x 可以是 16-31 之间的任何数字。y 可以是 0-255 之间的任何数字。</p><p>有效的私网 IP 地址的一个例子是 192.168.1.1。与之对应的 FQDN 可以是 lfs.example.org。</p><p>即使没有网卡，也要提供一个有效的 FQDN。某些程序，如 MTA（<strong>Mail Transfer Agent</strong>），需要它才能正常工作。</p><p>执行以下命令，创建 <code>/etc/hosts</code> 文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/hosts &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /etc/hosts</span></span>
<span class="line"><span></span></span>
<span class="line"><span>127.0.0.1 localhost.localdomain localhost</span></span>
<span class="line"><span>127.0.1.1 &lt;FQDN&gt; &lt;HOSTNAME&gt;</span></span>
<span class="line"><span>&lt;192.168.0.2&gt; &lt;FQDN&gt; &lt;HOSTNAME&gt; [alias1] [alias2] ...</span></span>
<span class="line"><span>::1 localhost ip6-localhost ip6-loopback</span></span>
<span class="line"><span>ff02::1 ip6-allnodes</span></span>
<span class="line"><span>ff02::2 ip6-allrouters</span></span>
<span class="line"><span></span></span>
<span class="line"><span># End /etc/hosts</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <em><code>&lt;192.168.0.2&gt;</code></em>，<em><code>&lt;FQDN&gt;</code></em>，以及*<code>&lt;主机名&gt;</code>* 的值需要为特定使用环境和需求进行修改 (如果系统或网络管理员分配了 IP 地址，且本机将被连接到现有的网络中)。可以略去可选的别名 (alias)，如果使用支持 DHCP或者 IPv6 自动配置的连接，则包含 <em><code>&lt;192.168.0.2&gt;</code></em> 的一行也可以省略。</p><p>::1 是 127.0.0.1 在 IPv6 中的对应，即 IPv6 回环接口。</p><h3 id="设备和模块管理概述" tabindex="-1"><a class="header-anchor" href="#设备和模块管理概述"><span>设备和模块管理概述</span></a></h3><h4 id="udev的实现" tabindex="-1"><a class="header-anchor" href="#udev的实现"><span>Udev的实现</span></a></h4><h5 id="sysfs" tabindex="-1"><a class="header-anchor" href="#sysfs"><span>Sysfs</span></a></h5><p>有些读者可能好奇，<code>sysfs</code> 是如何知道系统中存在哪些设备，以及应该为它们使用什么设备号的。答案是，那些编译到内核中的驱动程序在它们的对象被内核检测到时，直接将它们注册到 <code>sysfs</code> (内部的 devtmpfs)。对于那些被编译为模块的驱动程序，注册过程在模块加载时进行。只要 <code>sysfs</code> 文件系统被挂载好 (位于 /sys)，用户空间程序即可使用驱动程序注册在 <code>sysfs</code> 中的数据，Udev 就能够使用这些数据对设备进行处理(包括修改设备节点)。</p><h5 id="设备节点的创建" tabindex="-1"><a class="header-anchor" href="#设备节点的创建"><span>设备节点的创建</span></a></h5><p>内核通过 <code>devtmpfs</code> 直接创建设备文件，任何希望注册设备节点的驱动程序都要通过 <code>devtmpfs</code> (经过驱动程序核心) 实现。当一个 <code>devtmpfs</code> 实例被挂载到 <code>/dev</code> 时，设备节点将被以固定的名称、访问权限和所有者首次创建。</p><p>很快，内核会向 <strong>udevd</strong> 发送一个 uevent。根据 <code>/etc/udev/rules.d</code>，<code>/usr/lib/udev/rules.d</code>，以及 <code>/run/udev/rules.d</code> 目录中文件指定的规则，<strong>udevd</strong> 将为设备节点创建额外的符号链接，修改其访问权限，所有者，或属组，或者修改该对象的 <strong>udevd</strong> 数据库条目 (名称)。</p><p>以上三个目录中的规则都被编号，且这三个目录的内容将合并处理。如果 <strong>udevd</strong> 找不到它正在创建的设备对应的规则，它将会沿用 <code>devtmpfs</code> 最早使用的配置。</p><h5 id="模块加载" tabindex="-1"><a class="header-anchor" href="#模块加载"><span>模块加载</span></a></h5><p>编译为内核模块的设备驱动程序可能有内建的别名。别名可以通过 <strong>modinfo</strong> 程序查询，它通常和该模块支持的设备的总线相关标识符有关。例如，<em>snd-fm801</em> 驱动程序支持厂商 ID 为 0x1319，设备 ID 为 0x0801 的 PCI 设备，其别名为“pci:v00001319d00000801sv<em>sd</em>bc04sc01l*”。对于多数设备，总线驱动程序会通过 <code>sysfs</code> 导出应该处理该设备的驱动程序别名，例如 <code>/sys/bus/pci/devices/0000:00:0d.0/modalias</code> 文件应该包含字符串“pci:v00001319d00000801sv00001319sd00001319bc04sc01i00”。Udev 附带的默认规则会导致 <strong>udevd</strong> 调用 <strong>/sbin/modprobe</strong> 时传递 <code>MODALIAS</code> uevent 环境变量 (它的值应该和 sysfs 中 <code>modalias</code> 文件的内容相同)，从而加载那些在通配符扩展后别名与这个字符串匹配的模块。</p><p>在本例中，这意味着除了 <em>snd-fm801</em> 外，过时 (且不希望) 的 <em>forte</em> 如果可用，也会被加载。之后将介绍防止加载不希望的驱动程序的方法。</p><p>内核本身也能够在需要时为网络协议，文件系统，以及 NLS 支持加载模块。</p><h5 id="处理热插拔-动态设备" tabindex="-1"><a class="header-anchor" href="#处理热插拔-动态设备"><span>处理热插拔/动态设备</span></a></h5><p>当您插入一个设备，例如通用串行总线 (USB) MP3 播放器时，内核能够发现该设备现在已经被连接到系统，并生成一个 uevent 事件。之后 <strong>udevd</strong> 像前面描述的一样，处理该 uevent 事件。</p><h4 id="加载模块和创建设备时的问题" tabindex="-1"><a class="header-anchor" href="#加载模块和创建设备时的问题"><span>加载模块和创建设备时的问题</span></a></h4><h5 id="内核模块没有自动加载" tabindex="-1"><a class="header-anchor" href="#内核模块没有自动加载"><span>内核模块没有自动加载</span></a></h5><p>Udev 只加载拥有总线特定别名，且总线驱动程序正确地向 <code>sysfs</code> 导出了必要别名的模块。如果情况不是这样，您应该考虑用其他方法加载模块。在 Linux-5.19.2 中，已知 Udev 可以加载编写正确的 INPUT，IDE，PCI，USB，SCSI，SERIO，以及 FireWire 驱动程序。</p><p>为了确定您需要的设备驱动程序是否包含 Udev 支持，以模块名为参数运行 <strong>modinfo</strong> 命令。然后试着在 <code>/sys/bus</code> 中找到设备对应的目录，并检查其中是否有 <code>modalias</code> 文件。</p><p>如果 <code>modalias</code> 文件存在于 <code>sysfs</code> 中，说明驱动程序支持该设备，并能够直接和设备交互，但却没有正确的别名。这是驱动程序的 bug，您需要不通过 Udev 直接加载驱动，并等待这个问题日后被解决。</p><p>如果 <code>modalias</code> 文件不存在于 <code>/sys/bus</code> 下的对应目录中，说明内核开发者尚未对该总线类型增加 modalias 支持。在 Linux-5.19.2 中，ISA 总线不受支持。只能等待这个问题在日后被解决。</p><p>Udev 根本不会尝试加载“包装器” 驱动程序，比如 <em>snd-pcm-oss</em> 等，或 <em>loop</em> 等非硬件驱动程序。</p><h5 id="内核模块没有自动加载-且-udev-不尝试加载它" tabindex="-1"><a class="header-anchor" href="#内核模块没有自动加载-且-udev-不尝试加载它"><span>内核模块没有自动加载，且 Udev 不尝试加载它</span></a></h5><p>如果“包装器”仅仅用于增强其他模块的功能 (例如，<em>snd-pcm-oss</em> 增强 <em>snd-pcm</em> 的功能，使 OSS 应用程序能够使用声卡)，需要配置 <strong>modprobe</strong>，使其在 Udev 加载被包装的模块时，自动加载包装器。为此，需要将“softdep”行添加到对应的 <code>/etc/modprobe.d/*</code>&lt;filename&gt;<code>*.conf</code> 中。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>softdep snd-pcm post: snd-pcm-oss</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意“softdep”命令也允许 <code>pre:</code> 依赖项，或混合使用 <code>pre:</code> 和 <code>post:</code> 依赖项。参阅 <code>modprobe.d(5)</code> man 手册页面，了解更多关于“softdep”语法和功能的信息。</p><h5 id="udev-加载了不希望的模块" tabindex="-1"><a class="header-anchor" href="#udev-加载了不希望的模块"><span>Udev 加载了不希望的模块</span></a></h5><p>不要构建该模块，或者在 <code>/etc/modprobe.d/blacklist.conf</code> 文件中禁用它。以 <em>forte</em> 为例，下面一行禁用了该模块：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>blacklist forte</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>被禁用的模块仍然可以通过直接执行 <strong>modprobe</strong> 手动加载。</p><h5 id="udev-创建了错误的设备或错误的符号链接" tabindex="-1"><a class="header-anchor" href="#udev-创建了错误的设备或错误的符号链接"><span>Udev 创建了错误的设备或错误的符号链接</span></a></h5><p>这一般是由于一条规则意外地匹配了某个设备。例如，一个写得不好的规则可能同时匹配到 SCSI 磁盘 (正确的) 和对应厂商的 SCSI 通用设备 (不正确的)。找到引起问题的规则，并通过 <strong>udevadm info</strong> 的帮助，将它进一步细化。</p><h5 id="udev-规则工作不可靠" tabindex="-1"><a class="header-anchor" href="#udev-规则工作不可靠"><span>Udev 规则工作不可靠</span></a></h5><p>这可能是前一个问题的另一个表现形式。如果不是，而且您的规则使用了 <code>sysfs</code> 属性，这个问题可能由内核计时问题引发，这类问题需要在新的内核版本中修复。目前，您可以创建一条规则以等待被使用的 <code>sysfs</code> 属性，并将它附加到 <code>/etc/udev/rules.d/10-wait-for-sysfs.rules</code> 文件中 (如果不存在就创建一个文件)，绕过这个问题。如果您通过这种方法解决了问题，请通知 LFS 开发邮件列表。</p><h5 id="udev-没有创建设备" tabindex="-1"><a class="header-anchor" href="#udev-没有创建设备"><span>Udev 没有创建设备</span></a></h5><p>以下内容假设驱动程序已经被编译到内核中，或作为模块被加载，而且您已经检查过并确认 Udev 没有创建命名错误的设备。</p><p>如果驱动程序没有将它的信息导出到 <code>sysfs</code>，Udev 就无法获得创建设备节点必需的信息。这种问题往往出现在内核源代码树以外的第三方驱动程序中。这时，需要在 <code>/usr/lib/udev/devices</code> 中使用正确的主设备号和次设备号，创建一个静态设备节点 (参考内核文档中的 <code>devices.txt</code> 或第三方驱动厂商提供的文档)，该静态设备节点将被复制到 <code>/dev</code>，<strong>udev</strong> 会自动完成复制。</p><h5 id="重启后设备命名顺序随机变化" tabindex="-1"><a class="header-anchor" href="#重启后设备命名顺序随机变化"><span>重启后设备命名顺序随机变化</span></a></h5><p>这是由于 Udev 从设计上就是并行加载模块的，因此无法预测加载顺序。这个问题永远也不会被 “修复”。您不应该指望内核提供稳定的设备命名，而是应该创建您自己的规则，以根据设备的一些稳定属性，例如设备序列号或 Udev 安装的一些 *_id 工具的输出，来创建具有稳定名称的符号链接。</p><h3 id="管理设备" tabindex="-1"><a class="header-anchor" href="#管理设备"><span>管理设备</span></a></h3><h4 id="处理重复设备" tabindex="-1"><a class="header-anchor" href="#处理重复设备"><span>处理重复设备</span></a></h4><p>那些功能相同的设备在 <code>/dev</code> 中的顺序是随机的。</p><p>对于您的每个可能有这类问题的设备 (即使在您当前使用的 Linux 发行版上并没有问题)，找到 <code>/sys/class</code> 或 <code>/sys/block</code> 中的对应目录。对于视频设备，目录可能是 <code>/sys/class/video4linux/video*</code>X<code>*</code>。找出能够唯一确认该设备的属性 (通常是厂商和产品 ID，或者序列号)：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>udevadm info -a -p /sys/class/video4linux/video0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后编写创建符号链接的规则，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/udev/rules.d/83-duplicate_devs.rules &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 摄像头和电视棒的持久化符号链接</span></span>
<span class="line"><span>KERNEL==&quot;video*&quot;, ATTRS{idProduct}==&quot;1910&quot;, ATTRS{idVendor}==&quot;0d81&quot;, SYMLINK+=&quot;webcam&quot;</span></span>
<span class="line"><span>KERNEL==&quot;video*&quot;, ATTRS{device}==&quot;0x036f&quot;, ATTRS{vendor}==&quot;0x109e&quot;, SYMLINK+=&quot;tvtuner&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果是，<code>/dev/video0</code> 和 <code>/dev/video1</code> 仍然会随机指向电视棒和摄像头 (因此不应直接使用它们)，但符号链接 <code>/dev/tvtuner</code> 和 <code>/dev/webcam</code> 总会指向正确设备。</p><h3 id="配置系统时钟" tabindex="-1"><a class="header-anchor" href="#配置系统时钟"><span>配置系统时钟</span></a></h3><p>配置 <strong>systemd-timedated</strong> 系统服务，它的作用是配置系统时钟和时区。</p><p>如果您不确定您的硬件时钟是否设置为 UTC，运行 <strong><code>hwclock --localtime --show</code></strong> 命令，它会显示硬件时钟给出的当前时间。如果这个时间和您的手表显示的一致，则说明硬件时钟被设定为本地时间。相反，如果 <strong>hwclock</strong> 输出的时间不是本地时间，则硬件时钟很可能被设定为 UTC 时间。根据您的时区，在 <strong>hwclock</strong> 显示的时间上加减对应的小时数，进行进一步的验证。例如，如果您现在处于莫斯科时区，即 GMT -0700，在本地时间上加 7 小时，再进行比较。</p><p><strong>systemd-timedated</strong> 读取 <code>/etc/adjtime</code>，并根据其内容将硬件时钟设定为 UTC 或本地时间。</p><p>如果您的硬件时钟设置为本地时间，以下列内容创建 <code>/etc/adjtime</code> 文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/adjtime &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span>0.0 0 0.0</span></span>
<span class="line"><span>0</span></span>
<span class="line"><span>LOCAL</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>/etc/adjtime</code> 在初次引导时不存在，<strong>systemd-timedated</strong> 会假设硬件时钟使用 UTC，并据此调整该文件。</p><p>您也可以使用 <strong>timedatectl</strong> 工具告诉 <strong>systemd-timedated</strong> 您的硬件时钟是 UTC 还是本地时间：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>timedatectl set-local-rtc 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>timedatectl</strong> 也能修改系统时间和时区。</p><p>如果要修改系统时间，执行以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>timedatectl set-time YYYY-MM-DD HH:MM:SS</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>硬件时钟也会同时被更新。</p><p>要修改当前时区，执行以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>timedatectl set-timezone TIMEZONE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您可以通过运行以下命令查看可用的时区列表：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>timedatectl list-timezones</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="网络时钟同步" tabindex="-1"><a class="header-anchor" href="#网络时钟同步"><span>网络时钟同步</span></a></h4><p>从版本 213 开始，systemd 附带了一个名为 <strong>systemd-timesyncd</strong> 的守护程序，可以用于将系统时间与远程 NTP 服务器同步。</p><p>该守护程序没有被设计为替代现有成熟的 NTP 守护程序，而是一个仅仅实现了 SNTP 协议的客户端，可以用于一些不太复杂的任务，或是资源紧张的系统。</p><p>从 systemd 版本 216 开始，<strong>systemd-timesyncd</strong> 守护进程被默认启用。如果希望禁用它，执行以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>systemctl disable systemd-timesyncd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以在 <code>/etc/systemd/timesyncd.conf</code> 中修改 <strong>systemd-timesyncd</strong> 使用的服务器。</p><p>注意，当系统时钟设定为本地时间时，<strong>systemd-timesyncd</strong> 不会更新硬件时钟。</p><h3 id="配置-linux-控制台" tabindex="-1"><a class="header-anchor" href="#配置-linux-控制台"><span>配置 Linux 控制台</span></a></h3><p><strong>systemd-vconsole-setup</strong> 服务从 <code>/etc/vconsole.conf</code> 文件中读取配置信息。它根据配置确定使用的键映射和控制台字体。一些与特定语言相关的 HOWTO 文档可以帮助您进行配置，参阅 http://www.tldp.org/HOWTO/HOWTO-INDEX/other-lang.html。浏览 <strong>localectl list-keymaps</strong> 输出的可用控制台键映射列表。在 <code>/usr/share/consolefonts</code> 目录中寻找可用的控制台字体。</p><p><code>/etc/vconsole.conf</code> 文件的每一行都应该符合格式：变量名=&quot;值&quot;，</p><ul><li><p>KEYMAP</p><p>该变量指定键盘的键映射表。如果没有设定，默认为 <code>us</code>。</p></li><li><p>KEYMAP_TOGGLE</p><p>该变量可以用于配置第二切换键盘映射，没有默认设定值。</p></li><li><p>FONT</p><p>该变量指定虚拟控制台使用的字体。</p></li><li><p>FONT_MAP</p><p>该变量指定控制台字体映射。</p></li><li><p>FONT_UNIMAP</p><p>该变量指定 Unicode 字体映射。</p></li></ul><p>下面的例子可以用于德文键盘和控制台：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/vconsole.conf &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span>KEYMAP=de-latin1</span></span>
<span class="line"><span>FONT=Lat2-Terminus16</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在系统运行时，可以使用 <strong>localectl</strong> 工具修改 KEYMAP 变量值：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>localectl set-keymap MAP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h4><p>请注意 <strong>localectl</strong> 命令在 chroot 环境无法工作。只有在使用 systemd 引导 LFS 系统后才能使用它。</p><p>也可以通过指定 <strong>localectl</strong> 工具的参数，修改 X11 键盘布局，模型，变体和选项设置：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>localectl set-x11-keymap 布局 [模型] [变体] [选项]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果需要列出可用的 <strong>localectl set-x11-keymap</strong> 参数值，可以使用下列参数运行 <strong>localectl</strong> 命令：</p><ul><li><p>list-x11-keymap-models</p><p>列出已知的 X11 键盘映射模型。</p></li><li><p>list-x11-keymap-layouts</p><p>列出已知的 X11 键盘映射布局。</p></li><li><p>list-x11-keymap-variants</p><p>列出已知的 X11 键盘映射变体。</p></li><li><p>list-x11-keymap-options</p><p>列出已知的 X11 键盘映射选项。</p></li></ul><h4 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1"><span>注意</span></a></h4><p>上面给出的参数都需要 BLFS 中的 XKeyboard-Config 软件包。</p><h3 id="配置系统-locale" tabindex="-1"><a class="header-anchor" href="#配置系统-locale"><span>配置系统 Locale</span></a></h3><p>下面将创建的 <code>/etc/locale.conf</code> 设定本地语言支持需要的若干环境变量，正确设定它们可以带来以下好处：</p><ul><li>程序输出被翻译成本地语言</li><li>字符被正确分类为字母、数字和其他类别，这对于使 <strong>bash</strong> 正确接受命令行中的非 ASCII 本地非英文字符来说是必要的</li><li>根据所在地区惯例排序字母</li><li>适用于所在地区的默认纸张尺寸</li><li>正确格式化货币、时间和日期值</li></ul><p>将下面的 <em><code>&lt;ll&gt;</code></em> 替换为所需语言的双字符代号 (例如“en”)，<em><code>&lt;CC&gt;</code></em> 替换为国家或地区的双字符代号 (例如“GB”)，<em><code>&lt;charmap&gt;</code></em> 替换为您选定的 locale 的标准字符映射。另外，还可以加入 “@euro” 等可选修饰符。</p><p>Glibc 支持的所有 locale 可以用以下命令列出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>locale -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>字符映射可能有多个别名，例如“ISO-8859-1”也可以称为“iso8859-1”或者“iso88591”。某些程序不能正确处理一些别名 (例如，“UTF-8”必须写作“UTF-8”才能识别，而不能识别“utf8”)，因此在多数情况下，为了保险起见，最好使用 locale 的规范名称。为了确定规范名称，执行以下命令，将 <em><code>&lt;locale 名&gt;</code></em> 替换成 <strong>locale -a</strong> 对于您希望的 locale 的输出 (以“en_GB.iso88591”为例)。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>LC_ALL=&lt;locale 名&gt; locale charmap</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对于“en_GB.iso88591”locale，以上命令输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ISO-8859-1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就最终确定 locale 应设置为“en_GB.ISO-8859-1”。在将以上启发方法获得的 locale 添加到 Bash 启动文件之前，一定要进行下列测试：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>LC_ALL=&lt;locale 名&gt; locale language</span></span>
<span class="line"><span>LC_ALL=&lt;locale 名&gt; locale charmap</span></span>
<span class="line"><span>LC_ALL=&lt;locale 名&gt; locale int_curr_symbol</span></span>
<span class="line"><span>LC_ALL=&lt;locale 名&gt; locale int_prefix</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上命令应该输出语言名称，选定 locale 使用的字符编码，本地货币符号，以及所在国家或地区的国际电话区号。如果以上某个命令失败并输出类似下面这样的消息，意味着您的 locale 在第 8 章中没有安装，或者不被 Glibc 的默认安装支持。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>locale: Cannot set LC_* to default locale: No such file or directory</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果出现了这种消息，您应该用 <strong>localedef</strong> 命令安装所需的 locale，或重新选择一个不同的 locale。后文假设 Glibc 没有输出类似错误消息。</p><p>某些 LFS 以外的软件包可能缺乏对您选择的 locale 的支持，例如 X 库 (X 窗口系统的一部分)，它在您的 locale 与它内部文件中的字符映射表名不完全匹配时，会输出以下错误消息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Warning: locale not supported by Xlib, locale set to C</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>某些情况下 Xlib 期望字符映射以带有规范连字符的大写形式给出，例如应该使用 “ISO-8859-1”而不是“iso88591”。有时也可以通过去除 locale 规范中的字符映射部分找到合适的规范，可以通过运行 <strong>locale charmap</strong> 确认。例如，您需要将“de_DE.ISO-8859-15@euro”替换成“de_DE@euro”，以获得 Xlib 能够识别的 locale。</p><p>其他软件包在 locale 名不符合它们的期望时可能工作不正常(但未必输出错误消息)。在这种情况下，探索一下其他 Linux 发行版是如何支持您的 locale 的，可以得到一些有用的信息。</p><p>在确定了正确的 locale 设置后，创建 <code>/etc/locale.conf</code> 文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/locale.conf &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span>LANG=&lt;ll&gt;_&lt;CC&gt;.&lt;charmap&gt;&lt;@modifiers&gt;</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 <code>/etc/locale.conf</code> 的另一种方法是使用 systemd 的 <strong>localectl</strong> 工具。例如，要使用 <strong>localectl</strong> 完成上面给出的 locale 设置，运行命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>localectl set-locale LANG=&quot;&lt;ll&gt;_&lt;CC&gt;.&lt;charmap&gt;&lt;@modifiers&gt;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您也可以指定其他语言相关的环境变量，例如 <code>LANG</code>，<code>LC_CTYPE</code>，<code>LC_NUMERIC</code>，或 <strong>locale</strong> 输出的其他环境变量，用空格将它们分割即可。例如，将 <code>LANG</code> 设置为 en_US.UTF-8，<code>LC_CTYPE</code> 设置为 en_US：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>localectl set-locale LANG=&quot;en_US.UTF-8&quot; LC_CTYPE=&quot;en_US&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="注意-2" tabindex="-1"><a class="header-anchor" href="#注意-2"><span>注意</span></a></h4><p>请注意 <strong>localectl</strong> 命令在 chroot 环境无法工作。只有在使用 systemd 引导 LFS 系统后才能使用它。</p><p>“C” (默认 locale) 和“en_US”(推荐美式英语用户使用的 locale) 是不同的。“C” locale 使用 US-ASCII 7 位字符集，并且将最高位为 1 的字节视为无效字符。因此，<strong>ls</strong> 等命令会将它们替换为问号。另外，如果试图用 Mutt 或 Pine 发送包含这些字符的邮件，会发出不符合 RFC 标准的消息 (发出邮件的字符集会被标为“未知 8 位”)。因此，您只能在确信自己永远不会使用 8 位字符时才能使用“C” locale。</p><h3 id="创建-etc-inputrc-文件" tabindex="-1"><a class="header-anchor" href="#创建-etc-inputrc-文件"><span>创建 /etc/inputrc 文件</span></a></h3><p><code>inputrc</code> 文件是 Readline 库的配置文件，该库在用户从终端输入命令行时提供编辑功能。它的工作原理是将键盘输入翻译为特定动作。Readline 被 Bash 和大多数其他 shell，以及许多其他程序使用。</p><p>多数人不需要 Readline 的用户配置功能，因此以下命令创建全局的 <code>/etc/inputrc</code> 文件，供所有登录用户使用。如果您之后决定对于某个用户覆盖掉默认值，您可以在该用户的主目录下创建 <code>.inputrc</code> 文件，包含需要修改的映射。</p><p>关于更多如何编写 <code>inputrc</code> 文件的信息，参考 <strong>info bash</strong> 中 <em>Readline Init File</em> 一节。<strong>info readline</strong> 也是一个很好的信息源。</p><p>下面是一个通用的全局 <code>inputrc</code> 文件，包含解释一些选项含义的注释。注意注释不能和命令写在同一行。执行以下命令创建该文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/inputrc &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /etc/inputrc</span></span>
<span class="line"><span># Modified by Chris Lynn &lt;roryo@roryo.dynup.net&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Allow the command prompt to wrap to the next line</span></span>
<span class="line"><span>set horizontal-scroll-mode Off</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Enable 8-bit input</span></span>
<span class="line"><span>set meta-flag On</span></span>
<span class="line"><span>set input-meta On</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Turns off 8th bit stripping</span></span>
<span class="line"><span>set convert-meta Off</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Keep the 8th bit for display</span></span>
<span class="line"><span>set output-meta On</span></span>
<span class="line"><span></span></span>
<span class="line"><span># none, visible or audible</span></span>
<span class="line"><span>set bell-style none</span></span>
<span class="line"><span></span></span>
<span class="line"><span># All of the following map the escape sequence of the value</span></span>
<span class="line"><span># contained in the 1st argument to the readline specific functions</span></span>
<span class="line"><span>&quot;\\eOd&quot;: backward-word</span></span>
<span class="line"><span>&quot;\\eOc&quot;: forward-word</span></span>
<span class="line"><span></span></span>
<span class="line"><span># for linux console</span></span>
<span class="line"><span>&quot;\\e[1~&quot;: beginning-of-line</span></span>
<span class="line"><span>&quot;\\e[4~&quot;: end-of-line</span></span>
<span class="line"><span>&quot;\\e[5~&quot;: beginning-of-history</span></span>
<span class="line"><span>&quot;\\e[6~&quot;: end-of-history</span></span>
<span class="line"><span>&quot;\\e[3~&quot;: delete-char</span></span>
<span class="line"><span>&quot;\\e[2~&quot;: quoted-insert</span></span>
<span class="line"><span></span></span>
<span class="line"><span># for xterm</span></span>
<span class="line"><span>&quot;\\eOH&quot;: beginning-of-line</span></span>
<span class="line"><span>&quot;\\eOF&quot;: end-of-line</span></span>
<span class="line"><span></span></span>
<span class="line"><span># for Konsole</span></span>
<span class="line"><span>&quot;\\e[H&quot;: beginning-of-line</span></span>
<span class="line"><span>&quot;\\e[F&quot;: end-of-line</span></span>
<span class="line"><span></span></span>
<span class="line"><span># End /etc/inputrc</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-etc-shells-文件" tabindex="-1"><a class="header-anchor" href="#创建-etc-shells-文件"><span>创建 /etc/shells 文件</span></a></h3><p><code>shells</code> 文件包含系统登录 shell 的列表，应用程序使用该文件判断 shell 是否合法。该文件中每行指定一个 shell，包含该 shell 相对于目录树根 (/) 的路径。</p><p>例如 <strong>chsh</strong> 使用该文件判断一个非特权用户是否可以修改自己的登录 shell。如果命令没有在 /etc/shell 中找到，就会拒绝修改操作。</p><p>这个文件对某些程序是必要的。例如 GDM 在找不到 <code>/etc/shells</code> 时不会填充登录界面，FTP 守护进程通常禁止那些使用未在此文件列出的终端的用户登录。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/shells &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /etc/shells</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/bin/sh</span></span>
<span class="line"><span>/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span># End /etc/shells</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="systemd-使用和配置" tabindex="-1"><a class="header-anchor" href="#systemd-使用和配置"><span>Systemd 使用和配置</span></a></h3><h4 id="基础设置" tabindex="-1"><a class="header-anchor" href="#基础设置"><span>基础设置</span></a></h4><p><code>/etc/systemd/system.conf</code> 文件包含一组控制 systemd 基本功能的选项。默认文件中所有条目都被注释掉，并标明了默认值。可以在这里修改日志级别，以及其他一些基本日志设定。参阅 <code>systemd-system.conf(5)</code> man 手册页面了解每个选项的详细信息。</p><h4 id="禁用引导时自动清屏" tabindex="-1"><a class="header-anchor" href="#禁用引导时自动清屏"><span>禁用引导时自动清屏</span></a></h4><p>Systemd 的默认行为是在引导过程结束时清除屏幕。如果希望的话，您可以运行以下命令，修改这一行为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -pv /etc/systemd/system/getty@tty1.service.d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt; /etc/systemd/system/getty@tty1.service.d/noclear.conf &lt;&lt; EOF</span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>TTYVTDisallocate=no</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您总是可以用 <code>root</code> 身份运行 <strong><code>journalctl -b</code></strong> 命令，查阅引导消息。</p><h4 id="禁止将-tmpfs-挂载到-tmp" tabindex="-1"><a class="header-anchor" href="#禁止将-tmpfs-挂载到-tmp"><span>禁止将 tmpfs 挂载到 /tmp</span></a></h4><p>默认情况下，<code>/tmp</code> 将被挂载 tmpfs 文件系统。如果不希望这样，可以执行以下命令覆盖这一行为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ln -sfv /dev/null /etc/systemd/system/tmp.mount</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者，如果希望使用一个单独的 <code>/tmp</code> 分区，在 <code>/etc/fstab</code> 中为其添加一个条目。</p><h5 id="警告" tabindex="-1"><a class="header-anchor" href="#警告"><span>警告</span></a></h5><p>如果使用了单独的 <code>/tmp</code> 分区，不要创建上面的符号链接。这会导致根文件系统 (/) 无法重新挂载为可读写，使得系统在引导后不可用。</p><h4 id="配置文件自动创建和删除" tabindex="-1"><a class="header-anchor" href="#配置文件自动创建和删除"><span>配置文件自动创建和删除</span></a></h4><p>有一些创建或删除文件、目录的服务：</p><ul><li>systemd-tmpfiles-clean.service</li><li>systemd-tmpfiles-setup-dev.service</li><li>systemd-tmpfiles-setup.service</li></ul><p>它们的系统配置文件位于 <code>/usr/lib/tmpfiles.d/*.conf</code>。本地配置文件位于 <code>/etc/tmpfiles.d</code>。<code>/etc/tmpfiles.d</code> 中的文件覆盖 <code>/usr/lib/tmpfiles.d</code> 中的同名文件。参阅 <code>tmpfiles.d(5)</code> man 手册页面，了解配置文件格式的细节。</p><p>注意 <code>/usr/lib/tmpfiles.d/*.conf</code> 文件的语法较难理解。例如，删除 /tmp 目录下文件的默认规则是文件 <code>/usr/lib/tmpfiles.d/tmp.conf</code> 的一行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>q /tmp 1777 root root 10d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>类别字段 q 表示创建一个带有配额的子卷，它实际上只适用于 btrfs 文件系统。它引用类别 v，类别 v 又引用类别 d (目录)。对于类别 d，会在目录不存在时自动创建它，并根据配置文件调整其权限和所有者。如果 age 参数被指定，该目录中较老的文件会被自动清理。</p><p>如果默认参数不符合您的期望，您可以将文件复制到 <code>/etc/tmpfiles.d</code> 目录，再编辑复制得到的副本。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -p /etc/tmpfiles.d</span></span>
<span class="line"><span>cp /usr/lib/tmpfiles.d/tmp.conf /etc/tmpfiles.d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="覆盖系统服务默认行为" tabindex="-1"><a class="header-anchor" href="#覆盖系统服务默认行为"><span>覆盖系统服务默认行为</span></a></h4><p>Systemd 单元的参数可以通过在 <code>/etc/systemd/system</code> 中创建一个包含配置文件的目录而覆盖。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -pv /etc/systemd/system/foobar.service.d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt; /etc/systemd/system/foobar.service.d/foobar.conf &lt;&lt; EOF</span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Restart=always</span></span>
<span class="line"><span>RestartSec=30</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参阅 <code>systemd.unit(5)</code> man 手册页面获取更多信息。在创建配置文件后，执行 <strong><code>systemctl daemon-reload</code></strong> 和 <strong><code>systemctl restart foobar</code></strong>，激活对服务进行的修改。</p><h4 id="调试引导过程" tabindex="-1"><a class="header-anchor" href="#调试引导过程"><span>调试引导过程</span></a></h4><p>与 SysVinit 或 BSD 风格 init 系统不同，systemd 使用统一格式处理不同种类的引导文件 (或称为单元)。命令 <strong>systemctl</strong> 能够启用、禁用单元文件，或控制、查询单元文件的状态。以下是一些常用的命令：</p><ul><li><strong>systemctl list-units -t *<code>&lt;service&gt;</code>* [--all]</strong>: 列出已加载的服务 (service) 类型单元文件。</li><li><strong>systemctl list-units -t *<code>&lt;target&gt;</code>* [--all]</strong>: 列出已加载的引导目标 (target) 类型单元文件。</li><li><strong>systemctl show -p Wants *<code>&lt;multi-user.target&gt;</code>*</strong>: 显示所有依赖于 multi-user 引导目标的单元，引导目标 (target)是一种和 SysVinit 中运行级别 (runlevel) 地位相同的特殊单元文件。</li><li><strong>systemctl status *<code>&lt;servicename.service&gt;</code>*</strong>: 显示名为 servicename 的服务的状态。如果没有同名的其他类型单元文件，可以省略 .service 后缀。其他类型的单元文件有 .socket 文件 (它创建一个监听套接字，提供和 inetd/xinetd 类似的功能)。</li></ul><h4 id="使用-systemd-日志" tabindex="-1"><a class="header-anchor" href="#使用-systemd-日志"><span>使用 systemd 日志</span></a></h4><p>(默认情况下) 在使用 systemd 引导的系统上，systemd-journald 服务负责处理日志，它取代了传统的 Unix syslog 守护进程。如果您希望的话，也可以添加一个普通 syslog 守护进程，它和 systemd-journald 可以一起工作。systemd-journald 程序将日志项储存为二进制格式，而不是纯文本日志文件。为了解析日志文件，需要使用 systemd 提供的 <strong>journalctl</strong> 命令。下面是该命令的常见用法：</p><ul><li><strong>journalctl -r</strong>：按时间顺序，倒序显示所有日志内容。</li><li><strong>journalctl -u *<code>UNIT</code>*</strong>: 显示与给定单元文件 UNIT 关联的日志。</li><li><strong>journalctl -b[=ID] -r</strong>: 按时间倒序，显示自上次引导以来 (或编号为 ID 的引导中) 的所有日志。</li><li><strong>journalctl -f</strong>: 提供类似 tail -f 的功能 (不断将新日志项输出到屏幕)。</li></ul><h4 id="处理核心转储" tabindex="-1"><a class="header-anchor" href="#处理核心转储"><span>处理核心转储</span></a></h4><p>核心转储在调试崩溃的程序时非常有用，特别是对于守护进程崩溃的情况。在 systemd 引导的系统上，核心转储由 <strong>systemd-coredump</strong> 处理。它会在日志中记录核心转储，并且将核心转储文件本身存储到 <code>/var/lib/systemd/coredump</code> 中。如果要获取和处理核心转储文件，可以使用 <strong>coredumpctl</strong> 工具。下面给出它的常用命令的示例：</p><ul><li><strong>coredumpctl -r</strong>：按时间顺序，倒序显示所有核心转储记录。</li><li><strong>coredumpctl -1 info</strong>：显示最近一次核心转储的信息。</li><li><strong>coredumpctl -1 debug</strong>：将最后一次核心转储加载到 <a href="https://www.linuxfromscratch.org/blfs/view/stable-systemd/general/gdb.html" target="_blank" rel="noopener noreferrer">GDB</a> 中。</li></ul><p>核心转储可能使用大量磁盘空间。为了限制核心转储使用的最大磁盘空间，可以在 <code>/etc/systemd/coredump.conf.d</code> 中创建一个配置文件。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mkdir -pv /etc/systemd/coredump.conf.d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cat &gt; /etc/systemd/coredump.conf.d/maxuse.conf &lt;&lt; EOF</span></span>
<span class="line"><span>[Coredump]</span></span>
<span class="line"><span>MaxUse=5G</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参阅 man 手册页面 <code>systemd-coredump(8)</code>，<code>coredumpctl(1)</code>，以及 <code>coredump.conf.d(5)</code> 了解更多信息。</p><h4 id="持续运行进程" tabindex="-1"><a class="header-anchor" href="#持续运行进程"><span>持续运行进程</span></a></h4><p>从 systemd 的 230 版本开始，在用户会话结束时，所有用户进程都被杀死，即使使用了 nohup 或 <code>daemon()</code> 、<code>setsid</code> 等函数也不例外。这是开发者有意做出的修改，将传统的宽松环境改为更加严格的环境。如果您需要让持续运行的程序 (例如 <strong>screen</strong> 或 <strong>tmux</strong>) 在用户会话结束后保持运行，这项新的行为会导致问题。有三种方法使得这类驻留进程在用户会话结束后继续运行：</p><ul><li><em>仅为选定的用户启用进程驻留</em>：普通用户有执行命令 <strong>loginctl enable-linger</strong> 启用进程驻留的权限，管理员可以使用带 <em><code>user</code></em> 参数的该命令，为特定用户启用进程驻留。在启用进程驻留后，可以使用 <strong>systemd-run</strong> 命令启动持续运行的进程。例如，<strong>systemd-run --scope --user /usr/bin/screen</strong>。如果您为您的用户启用了进程驻留，则 user@.service 将持续运行，甚至在所有登录会话关闭后仍然运行，而且会在系统引导时自动启动。这种方法的好处是可以显式地允许或禁止进程在用户会话结束后继续运行，但却破坏了和 <strong>nohup</strong> 等工具，和使用 <code>daemon()</code> 函数的工具的兼容性。</li><li><em>为整个系统启用进程驻留</em>：您可以在将*<code>KillUserProcesses=no</code>* 设置行加入 <code>/etc/systemd/logind.conf</code>，为所有用户全局地启用进程驻留。它的好处是允许所有用户继续使用旧方法，但无法进行明确控制。</li><li><em>在编译时禁用该功能</em>：您可以在构建 systemd 时传递参数 <em><code>-Ddefault-kill-user-process=no</code></em> 给 <strong>meson</strong>，使得 systemd 默认启用进程驻留。这完全禁用了 systemd 在会话结束时杀死用户进程的功能。</li></ul><h2 id="使-lfs-系统可引导" tabindex="-1"><a class="header-anchor" href="#使-lfs-系统可引导"><span>使 LFS 系统可引导</span></a></h2><h3 id="创建-etc-fstab-文件" tabindex="-1"><a class="header-anchor" href="#创建-etc-fstab-文件"><span>创建 /etc/fstab 文件</span></a></h3><p>一些程序使用 <code>/etc/fstab</code> 文件，以确定哪些文件系统是默认挂载的，和它们应该按什么顺序挂载，以及哪些文件系统在挂载前必须被检查 (确定是否有完整性错误)。参考以下命令，创建一个新的文件系统表：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /etc/fstab &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /etc/fstab</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 文件系统 挂载点类型 选项转储检查</span></span>
<span class="line"><span>#顺序</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/dev/&lt;xxx&gt; /&lt;fff&gt;defaults1 1</span></span>
<span class="line"><span>/dev/&lt;yyy&gt; swapswap pri=1 0 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span># End /etc/fstab</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <em><code>&lt;xxx&gt;</code></em>、<em><code>&lt;yyy&gt;</code></em> 和 <em><code>&lt;fff&gt;</code></em> 替换为适用于您的系统的值，例如 <code>sda2</code>、<code>sda5</code> 和 <code>ext4</code>。参阅 <strong>man 5 fstab</strong> 了解该文件中 6 个域的详细信息。</p><p>在挂载来源于 MS-DOS 或 Windows 的文件系统 (如 vfat、ntfs、smbfs、cifs、iso9660、udf) 时，需要一个特殊的挂载选项 —— utf8，才能正常解析文件名中的非 ASCII 字符。对于非 UTF-8 locale，选项 <code>iocharset</code> 的值应该和您的 locale 字符集设定一致，但改写成内核可以识别的写法。该选项能够正常工作的前提是，将相关的字符集定义 (在内核配置选项的 File Systems -&gt; Native Language Support 子菜单中) 编译到内核中，或构建为内核模块。然而，如果使用了 UTF-8 locale，对应的 <code>iocharset=utf8</code> 会导致文件系统变得大小写敏感。为了避免这个问题，在使用 UTF-8 locale 时，需要用特殊选项 <code>utf8</code> 代替 <code>iocharset=utf8</code>。另外，vfat 和 smbfs 文件系统还需要“codepage”选项，它应该被设定为您的语言在 MS-DOS 下的代码页编号。例如，为了挂载一个 USB 闪存盘，一个 ru_RU.KOI8-R 用户应该在 <code>/etc/fstab</code> 中对应于闪存盘的行添加下列挂载选项：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>noauto,user,quiet,showexec,codepage=866,iocharset=koi8r</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>相应的，ru_RU.UTF-8 用户应该使用下列选项：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>noauto,user,quiet,showexec,codepage=866,utf8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意此时使用的 <code>iocharset</code> 默认为 <code>iso8859-1</code> (这保证文件系统是大小写不敏感的)，而 <code>utf8</code> 选项告诉内核使用 UTF-8 编码转换文件名，这样它们就能在 UTF-8 locale 中被正确解析。</p><p>也可以在内核配置中，为一些文件系统指定默认 codepage 和 iocharset 选项值。相关的配置参数名为“Default NLS Option” (<code>CONFIG_NLS_DEFAULT</code>)，“Default Remote NLS Option” (<code>CONFIG_SMB_NLS_DEFAULT</code>)，“Default codepage for FAT” (<code>CONFIG_FAT_DEFAULT_CODEPAGE</code>)，以及 “Default iocharset for FAT” (<code>CONFIG_FAT_DEFAULT_IOCHARSET</code>)。无法在编译内核时为 ntfs 文件系统指定这些默认值。</p><p>在某些硬盘上，通过将 <code>barrier=1</code> 挂载选项加入 <code>/etc/fstab</code>，可以使得 ext3 文件系统在发生电源故障时更可靠。为了检查磁盘驱动器是否支持该选项，在可用的磁盘驱动器上运行 <a href="https://www.linuxfromscratch.org/blfs/view/stable-systemd/general/hdparm.html" target="_blank" rel="noopener noreferrer">hdparm</a>。例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>hdparm -I /dev/sda | grep NCQ</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果输出内容不为空，说明该选项可用。</p><p>注意：基于逻辑卷管理 (LVM) 的分区不能使用 <code>barrier</code> 选项。</p><h3 id="linux-5-19-2" tabindex="-1"><a class="header-anchor" href="#linux-5-19-2"><span>Linux-5.19.2</span></a></h3><h4 id="安装内核" tabindex="-1"><a class="header-anchor" href="#安装内核"><span>安装内核</span></a></h4><p>构建内核需要三步 —— 配置、编译、安装。阅读内核源代码树中的 <code>README</code> 文件，了解不同于本手册的内核配置方法。</p><p>运行以下命令，准备编译内核：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>make mrproper</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令确保内核源代码树绝对干净，内核开发组建议在每次编译内核前运行该命令。尽管内核源代码树在解压后应该是干净的，但这并不完全可靠。</p><p>有多种配置内核选项的方法。例如，通常我们通过目录驱动的界面完成这一工作：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>make menuconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>以上命令中可选的 make 环境变量及含义：</strong></p><ul><li><p><em><code>LANG=&lt;host_LANG_value&gt; LC_ALL=</code></em></p><p>它们根据宿主使用的 locale 建立 locale 设定。在 UTF-8 Linux 文本终端下，有时必须这样做才能正确绘制基于 ncurses 的配置菜单接口。在这种情况下，一定要将 <em><code>&lt;host_LANG_value&gt;</code></em> 替换成宿主环境中的 <code>$LANG</code> 变量值。您也可以使用宿主环境中 <code>$LC_ALL</code> 或 <code>$LC_CTYPE</code> 的值代替。</p></li><li><p><strong>make menuconfig</strong></p><p>这会启动 ncurses 目录驱动的界面。如果希望了解其他 (图形) 界面，可以输入 <strong>make help</strong>。</p></li></ul><p>阅读 <a href="https://www.linuxfromscratch.org/hints/downloads/files/kernel-configuration.txt" target="_blank" rel="noopener noreferrer">https://www.linuxfromscratch.org/hints/downloads/files/kernel-configuration.txt</a> 了解关于内核配置的一般信息。BLFS 包含一些关于 LFS 之外的软件包需要的特定内核配置的信息，位于https://www.linuxfromscratch.org/blfs/view/stable-systemd/longindex.html#kernel-config-index。另外在 http://www.kroah.com/lkn/ 也有一些关于配置和构建内核的信息。</p><h5 id="注意-3" tabindex="-1"><a class="header-anchor" href="#注意-3"><span>注意</span></a></h5><p>一个较好的初始内核配置可以通过运行 <strong>make defconfig</strong> 获得。它会考虑您的当前系统体系结构，将基本内核配置设定到较好的状态。</p><p>一定要按照以下列表启用/禁用/设定其中列出的内核特性，否则系统可能不能正常工作，甚至根本无法引导：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>General setup --&gt;</span></span>
<span class="line"><span> [ ] Compile the kernel with warnings as errors [CONFIG_WERROR]</span></span>
<span class="line"><span> [ ] Auditing Support [CONFIG_AUDIT]</span></span>
<span class="line"><span> &lt; &gt; Enable kernel headers through /sys/kernel/kheaders.tar.xz [CONFIG_IKHEADERS]</span></span>
<span class="line"><span> [*] Control Group support [CONFIG_CGROUPS]</span></span>
<span class="line"><span>[*] Memory controller [CONFIG_MEMCG]</span></span>
<span class="line"><span> [ ] Enable deprecated sysfs features to support old userspace tools [CONFIG_SYSFS_DEPRECATED]</span></span>
<span class="line"><span> [*] Configure standard kernel features (expert users) [CONFIG_EXPERT] ---&gt;</span></span>
<span class="line"><span>[*] open by fhandle syscalls [CONFIG_FHANDLE]</span></span>
<span class="line"><span> CPU/Task time and stats accounting ---&gt;</span></span>
<span class="line"><span>[*] Pressure stall information tracking [CONFIG_PSI]</span></span>
<span class="line"><span>General architecture-dependent options---&gt;</span></span>
<span class="line"><span> [*] Enable seccomp to safely compute untrusted bytecode [CONFIG_SECCOMP]</span></span>
<span class="line"><span>Networking support---&gt;</span></span>
<span class="line"><span>Networking options---&gt;</span></span>
<span class="line"><span> &lt;*&gt; The IPv6 protocol [CONFIG_IPV6]</span></span>
<span class="line"><span>Device Drivers---&gt;</span></span>
<span class="line"><span>Firmware Drivers---&gt;</span></span>
<span class="line"><span> [*] Export DMI identification via sysfs to userspace [CONFIG_DMIID]</span></span>
<span class="line"><span>Graphics support ---&gt;</span></span>
<span class="line"><span> Frame buffer Devices ---&gt;</span></span>
<span class="line"><span>[*] Support for frame buffer devices ----</span></span>
<span class="line"><span>Generic Driver Options---&gt;</span></span>
<span class="line"><span> [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]</span></span>
<span class="line"><span> [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]</span></span>
<span class="line"><span> [*] Automount devtmpfs at /dev, after the kernel mounted the rootfs [CONFIG_DEVTMPFS_MOUNT]</span></span>
<span class="line"><span> Firmware Loader ---&gt;</span></span>
<span class="line"><span>[ ] Enable the firmware sysfs fallback mechanism [CONFIG_FW_LOADER_USER_HELPER]</span></span>
<span class="line"><span>File systems---&gt;</span></span>
<span class="line"><span> [*] Inotify support for userspace [CONFIG_INOTIFY_USER]</span></span>
<span class="line"><span>Pseudo filesystems---&gt;</span></span>
<span class="line"><span> [*] Tmpfs POSIX Access Control Lists [CONFIG_TMPFS_POSIX_ACL]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在构建 64 位系统，还需要启用一些特性。如果使用 menuconfig 进行配置，需要首先启用 <em><code>CONFIG_PCI_MSI</code></em>，然后启用 <em><code>CONFIG_IRQ_REMAP</code></em>，最后启用 <em><code>CONFIG_X86_X2APIC</code></em>，这是因为只有选定了一个选项的所有依赖项后，该选项才会出现。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Processor type and features ---&gt;</span></span>
<span class="line"><span>[*] Support x2apic [CONFIG_X86_X2APIC]</span></span>
<span class="line"><span>Memory Management options---&gt;</span></span>
<span class="line"><span>[ ] Enable userfaultfd() system call [CONFIG_USERFAULTFD]</span></span>
<span class="line"><span>Device Drivers ---&gt;</span></span>
<span class="line"><span>[*] PCI Support ---&gt; [CONFIG_PCI]</span></span>
<span class="line"><span>[*] Message Signaled Interrupts (MSI and MSI-X) [CONFIG_PCI_MSI]</span></span>
<span class="line"><span>[*] IOMMU Hardware Support ---&gt; [CONFIG_IOMMU_SUPPORT]</span></span>
<span class="line"><span>[*] Support for Interrupt Remapping [CONFIG_IRQ_REMAP]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="注意-4" tabindex="-1"><a class="header-anchor" href="#注意-4"><span>注意</span></a></h5><p>尽管 “The IPv6 Protocol” (IPv6 协议支持) 并不是严格要求的，但是 systemd 开发者强烈推荐启用它。</p><h5 id="注意-5" tabindex="-1"><a class="header-anchor" href="#注意-5"><span>注意</span></a></h5><p>如果您的硬件支持 UEFI，且您希望通过 UEFI 引导 LFS 系统，则您需要按照 <a href="https://www.linuxfromscratch.org/blfs/view/stable-systemd/postlfs/grub-setup.html#uefi-kernel" target="_blank" rel="noopener noreferrer">BLFS 页面</a> 的说明，调整一些内核配置选项。</p><p><strong>上述配置选项的含义：</strong></p><ul><li><p><em><code>Compile the kernel with warnings as errors</code></em></p><p>如果使用了和内核开发者不同的编译器和/或配置，启用该选项可能导致构建失败。</p></li><li><p><em><code>Enable kernel headers through /sys/kernel/kheaders.tar.xz</code></em></p><p>启用该选项将会导致构建内核需要 <strong>cpio</strong>。LFS 没有安装 <strong>cpio</strong>。</p></li><li><p><em><code>Support for uevent helper</code></em></p><p>如果启用了该选项，它可能干扰 Udev/Eudev 的设备管理。</p></li><li><p><em><code>Maintain a devtmpfs</code></em></p><p>该选项会使内核自动创建设备节点，即使 Udev 没有运行。Udev 之后才在这些设备节点的基础上运行，管理它们的访问权限并为它们建立符号链接。所有 Udev/Eudev 用户都需要启用该选项。</p></li><li><p><em><code>Automount devtmpfs at /dev</code></em></p><p>该选项使得内核在切换到根文件系统之后，执行 init 前，将内核获知的设备信息挂载到 /dev。</p></li><li><p><em><code>Support x2apic</code></em></p><p>支持以 x2APIC 模式运行 64 位 x86 处理器的中断控制器。64 位 x86 系统的固件可能启用了 x2APIC，此时未启用该选项的内核在引导时会发生内核恐慌。该选项在固件禁用 x2APIC 时没有作用，但无害。</p></li><li><p><em><code>Enable userfaultfd() system call</code></em></p><p>如果启用该选项，则会暴露一项在 Linux-5.19.2 中尚未解决的安全缺陷。禁用该选项以避免安全缺陷。userfaultfd() 系统调用并未被 LFS 或 BLFS 中的任何组件使用。</p></li></ul><p>某些情况下，<strong>make oldconfig</strong> 更为合适。阅读 <code>README</code> 文件了解更多信息。</p><p>如果希望的话，也可以将宿主系统的内核配置文件 <code>.config</code> 拷贝到解压出的 <code>linux-5.19.2</code> 目录 (前提是可以找到该文件)。然而我们不推荐这样做，一般来说，浏览整个配置目录，并从头创建内核配置是更好的选择。</p><p>编译内核映像和模块：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果要使用内核模块，可能需要在 <code>/etc/modprobe.d</code> 中写入模块配置。讨论模块和内核配置的信息位于<a href="https://lfs.xry111.site/zh_CN/11.2-systemd/chapter09/udev.html" target="_blank" rel="noopener noreferrer">第 9.3 节 “设备和模块管理概述”</a>和 <code>linux-5.19.2/Documentation</code> 目录下的内核文档中。另外 <code>modprobe.d(5)</code> 也可以作为参考。</p><p>如果内核配置使用了模块，安装它们：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>make modules_install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在内核编译完成后，需要进行额外步骤完成安装，一些文件需要拷贝到 <code>/boot</code> 目录中。</p><h5 id="小心" tabindex="-1"><a class="header-anchor" href="#小心"><span>小心</span></a></h5><p>如果宿主系统有单独的 /boot 分区，需要将这些文件拷贝到该分区中。最简单的方法是将宿主系统的 /boot (在 chroot 之外) 绑定到 /mnt/lfs/boot 再拷贝文件，在<em>宿主系统</em>中，以 <code>root</code> 身份执行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mount --bind /boot /mnt/lfs/boot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>指向内核映像的路径可能随机器平台的不同而变化。下面使用的文件名可以依照您的需要改变，但文件名的开头应该保持为 <em>vmlinuz</em>，以保证和下一节描述的引导过程自动设定相兼容。下面的命令假定是机器是 x86 体系结构：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cp -iv arch/x86/boot/bzImage /boot/vmlinuz-5.19.2-lfs-11.2-systemd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>System.map</code> 是内核符号文件，它将内核 API 的每个函数入口点和运行时数据结构映射到它们的地址。它被用于调查分析内核可能出现的问题。执行以下命令安装该文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cp -iv System.map /boot/System.map-5.19.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>内核配置文件 <code>.config</code> 由上述的 <strong>make menuconfig</strong> 步骤生成，包含编译好的内核的所有配置选项。最好能将它保留下来以供日后参考：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cp -iv .config /boot/config-5.19.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装 Linux 内核文档：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>install -d /usr/share/doc/linux-5.19.2</span></span>
<span class="line"><span>cp -r Documentation/* /usr/share/doc/linux-5.19.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，在内核源代码目录中可能有不属于 <em>root</em> 的文件。在以 <em>root</em> 身份解压源代码包时 (就像我们在 chroot 环境中所做的那样)，这些文件会获得它们之前在软件包创建者的计算机上的用户和组 ID。这一般不会造成问题，因为在安装后通常会删除源代码目录树。然而，Linux 源代码目录树一般会被保留较长时间，这样创建者当时使用的用户 ID 就可能被分配给本机的某个用户，导致该用户拥有内核源代码的写权限。</p><h5 id="注意-6" tabindex="-1"><a class="header-anchor" href="#注意-6"><span>注意</span></a></h5><p>之后在 BLFS 中安装软件包时往往需要修改内核配置。因此，和其他软件包不同，我们在安装好内核后可以不移除源代码树。</p><p>如果要保留内核源代码树，对内核源代码目录运行 <strong>chown -R 0:0</strong> 命令，以保证 <code>linux-5.19.2</code> 目录中所有文件都属于 <em>root</em>。</p><h5 id="警告-1" tabindex="-1"><a class="header-anchor" href="#警告-1"><span>警告</span></a></h5><p>有的内核文档建议创建符号链接 <code>/usr/src/linux</code> 指向内核源代码目录，这仅仅适用于 2.6 系列之前的内核。在 LFS 系统上<em>绝对不要</em>创建它，因为在构建完基本 LFS 系统后，它可能在您构建其他软件包时引起问题。</p><h5 id="警告-2" tabindex="-1"><a class="header-anchor" href="#警告-2"><span>警告</span></a></h5><p>在系统 <code>include</code> 目录 (即 <code>/usr/include</code>) 中的内核头文件应该<em>总是</em>与构建 Glibc 时使用的内核头文件一致，即保持为<a href="https://lfs.xry111.site/zh_CN/11.2-systemd/chapter05/linux-headers.html" target="_blank" rel="noopener noreferrer">第 5.4 节 “Linux-5.19.2API 头文件”</a>中安装的净化头文件。换句话说，<em>永远不要</em>用原始内核头文件，或其他版本内核的净化头文件替换它们。</p><h4 id="配置-linux-内核模块加载顺序" tabindex="-1"><a class="header-anchor" href="#配置-linux-内核模块加载顺序"><span>配置 Linux 内核模块加载顺序</span></a></h4><p>多数情况下 Linux 内核模块可以自动加载，但有时需要指定加载顺序。负责加载内核模块的程序 <strong>modprobe</strong> 和 <strong>insmod</strong> 从 <code>/etc/modprobe.d</code> 下的配置文件中读取加载顺序，例如，如果 USB 驱动程序 (ehci_hcd、ohci_hcd 和 uhci_hcd) 被构建为模块，则必须按照先加载 echi_hcd，再加载 ohci_hcd 和 uhci_hcd 的正确顺序，才能避免引导时出现警告信息。</p><p>为此，执行以下命令创建文件 <code>/etc/modprobe.d/usb.conf</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>install -v -m755 -d /etc/modprobe.d</span></span>
<span class="line"><span>cat &gt; /etc/modprobe.d/usb.conf &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /etc/modprobe.d/usb.conf</span></span>
<span class="line"><span></span></span>
<span class="line"><span>install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true</span></span>
<span class="line"><span>install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true</span></span>
<span class="line"><span></span></span>
<span class="line"><span># End /etc/modprobe.d/usb.conf</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="linux-的内容" tabindex="-1"><a class="header-anchor" href="#linux-的内容"><span>Linux 的内容</span></a></h4><p><strong>安装的文件:</strong> config-5.19.2, vmlinuz-5.19.2-lfs-11.2-systemd, 以及 System.map-5.19.2</p><p><strong>安装的目录:</strong> /lib/modules 和 /usr/share/doc/linux-5.19.2</p><h5 id="简要描述" tabindex="-1"><a class="header-anchor" href="#简要描述"><span>简要描述</span></a></h5><table><thead><tr><th><code>config-5.19.2</code></th><th>包含所有内核配置选项的值</th></tr></thead><tbody><tr><td><code>vmlinuz-5.19.2-lfs-11.2-systemd</code></td><td>Linux系统的引擎，在启动计算机时，它是操作系统中被最早加载的部分。它检测并初始化计算机硬件，将它们以目录树的形式提供给软件，并将单个CPU 封装成多任务系统，使多个用户程序看上去在同时执行</td></tr><tr><td><code>System.map-5.19.2</code></td><td>地址和符号列表；它将内核函数和数据结构映射为入口点和地址</td></tr></tbody></table><h3 id="使用-grub设定引导过程" tabindex="-1"><a class="header-anchor" href="#使用-grub设定引导过程"><span>使用 GRUB设定引导过程</span></a></h3><h4 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h4><h5 id="警告-3" tabindex="-1"><a class="header-anchor" href="#警告-3"><span>警告</span></a></h5><p>如果您不小心错误地配置了 GRUB，可能导致您的系统完全无法使用，除非使用 CD-ROM 或可引导的 USB存储器等备用引导设备。本节不是引导您的 LFS 系统的唯一方案，您可能只要修改现有的启动加载器 (如Grub-Legacy、GRUB2 或 LILO) 配置即可引导 LFS。</p><p>您务必保证自己拥有一个紧急引导磁盘，它在计算机不可用 (无法引导) 时能够 “抢修”计算机。如果您现在还没有引导设备，您可以执行以下命令创建一个。在运行下列命令前，您需要跳到 BLFS，安装包含**<code>xorriso</code>** 的 <a href="https://www.linuxfromscratch.org/blfs/view/stable-systemd/multimedia/libisoburn.html" target="_blank" rel="noopener noreferrer"> libisoburn</a> 软件包：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cd /tmp</span></span>
<span class="line"><span>grub-mkrescue --output=grub-img.iso</span></span>
<span class="line"><span>xorriso -as cdrecord -v dev=/dev/cdrw blank=as_needed grub-img.iso</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="grub-命名惯例" tabindex="-1"><a class="header-anchor" href="#grub-命名惯例"><span>GRUB 命名惯例</span></a></h4><p>GRUB 使用一种独特的命名结构，为驱动器和分区命名。分区名的形式为 <em>(hdn,m)</em>，这里 <em>n</em> 是硬盘驱动器编号，<em>m</em> 是分区编号。硬盘驱动器编号从 0 开始，但分区号对于主分区来说从 1开始，而对于扩展分区来说从 5 开始。例如，分区 <code>sda1</code> 在 GRUB中的名字是 <em>(hd0,1)</em>，而 <code>sdb3</code> 的名字是 <em>(hd1,3)</em>。和 Linux 不同，GRUB 不认为 CD-ROM驱动器属于硬盘驱动器。例如，如果在 <code>hdb</code> 上有一个 CD-ROM驱动器，而 <code>hdc</code> 上有第二个硬盘驱动器，则第二个硬盘驱动器仍然名为<em>hd1</em>。</p><h4 id="设定-grub-配置" tabindex="-1"><a class="header-anchor" href="#设定-grub-配置"><span>设定 GRUB 配置</span></a></h4><p>GRUB 的工作方式是，将数据写入硬盘的第一个物理磁道。这里不属于任何文件系统，在启动时，第一个物理磁道中的程序从引导分区加载GRUB 模块，默认在 /boot/grub 中查找模块。</p><p>引导分区的位置由负责进行配置的用户自己决定，作者推荐创建一个小的 (建议大小为 200 MB) 分区，专门存放引导信息。这样，不同的Linux 系统 (无论是 LFS 还是商业发行版)在启动时和启动后都能访问相同的引导文件。如果您选择这样做，您需要挂载这个单独的分区，将 <code>/boot</code> 中已有的文件 (例如上一节中构建的内核)移动到新的分区中。之后，解除该分区的挂载，并将它挂载为 <code>/boot</code>。另外，还要注意更新 <code>/etc/fstab</code>。</p><p>直接使用 LFS 分区也是可以的，但这样在配置多系统启动时比较麻烦。</p><p>根据以上信息，确定 LFS 根分区 (或 boot 分区，如果使用了独立的 boot 分区) 的名称。下面假设 LFS 根分区 (或boot 分区) 是 <code>sda2</code>。</p><p>将 GRUB 文件安装到 <code>/boot/grub</code> 并设定引导磁道：</p><h5 id="警告-4" tabindex="-1"><a class="header-anchor" href="#警告-4"><span>警告</span></a></h5><p>以下命令会覆盖当前启动引导器，如果这不是您希望的，不要运行该命令。例如，如果您使用第三方启动引导器管理主引导记录 (MBR)。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>grub-install /dev/sda</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="注意-7" tabindex="-1"><a class="header-anchor" href="#注意-7"><span>注意</span></a></h5><p>如果系统是使用 UEFI 引导的，<strong>grub-install</strong> 会试图为 <em>x86_64-efi</em> 目标安装文件，但它们并未在<a href="https://lfs.xry111.site/zh_CN/11.2-systemd/chapter08/chapter08.html" target="_blank" rel="noopener noreferrer">第 8 章</a>中安装。如果出现了这类问题，请在以上命令中添加<code>--target i386-pc</code> 选项。</p><h4 id="创建-grub-配置文件" tabindex="-1"><a class="header-anchor" href="#创建-grub-配置文件"><span>创建 GRUB 配置文件</span></a></h4><p>生成 <code>/boot/grub/grub.cfg</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cat &gt; /boot/grub/grub.cfg &lt;&lt; &quot;EOF&quot;</span></span>
<span class="line"><span># Begin /boot/grub/grub.cfg</span></span>
<span class="line"><span>set default=0</span></span>
<span class="line"><span>set timeout=5</span></span>
<span class="line"><span></span></span>
<span class="line"><span>insmod ext2</span></span>
<span class="line"><span>set root=(hd0,2)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>menuentry &quot;GNU/Linux, Linux 5.19.2-lfs-11.2-systemd&quot; {</span></span>
<span class="line"><span>linux /boot/vmlinuz-5.19.2-lfs-11.2-systemd root=/dev/sda2 ro</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="注意-8" tabindex="-1"><a class="header-anchor" href="#注意-8"><span>注意</span></a></h5><p>从 GRUB的视角来看，内核文件的位置相对于它使用的分区。如果您使用了单独的 /boot分区，需要从上面的 <em>linux</em> 行删除/boot，然后修改 <em>set root</em> 行，指向/boot 分区。</p><h5 id="注意-9" tabindex="-1"><a class="header-anchor" href="#注意-9"><span>注意</span></a></h5><p>如果新增或移除了一些存储设备 (包括 USB 闪存盘等可移动存储设备)，则 GRUB赋予分区的编号可能发生改变。这可能导致引导失败，因为 <code>grub.cfg</code>仍然在使用“旧的”编号。如果希望避免这种问题，可以使用分区和文件系统的 UUID 指定分区，以代替GRUB 编号。运行 <strong>lsblk -o UUID,PARTUUID,PATH,MOUNTPOINT</strong> 以显示文件系统 (在<code>UUID</code> 列) 和分区 (在 <code>PARTUUID</code> 列) 的 UUID。之后将 <code>setroot=(hdx,y)</code> 替换为 <code>search --set=root--fs-uuid *</code>&lt;内核所在文件系统的UUID<code>*</code> ，并将 <code>root=/dev/sda2</code> 替换为 <code>root=PARTUUID=*</code>&lt;构建 LFS使用的分区的 UUID<code>*</code>。</p><p>注意分区的 UUID 和该分区中文件系统的 UUID 是完全不同的。一些在线资料可能建议使用 <code>root=UUID=*</code>&lt;文件系统UUID&gt;<code>*</code> 代替<code>root=PARTUUID=*</code>&lt;分区UUID&gt;<code>*</code>，但是这种方法依赖于 initramfs，而 initramfs 超出了LFS 的范畴。</p><p><code>/dev</code> 中分区对应的设备节点名也可能发生改变 (尽管和 GRUB分区编号的变化相比较为少见)。在 <code>/etc/fstab</code> 中，也可以将<code>/dev/sda1</code> 这样的设备节点路径改为 <code>PARTUUID=*</code>&lt;分区UUID&gt;<code>*</code>，从而避免设备节点命名发生改变时可能导致的引导失败。</p><p>GRUB是一个很强大的程序，它提供了非常多的选项，可以支持多种设备、操作系统和分区类型，还有很多用于定制启动屏幕、声音、鼠标输入等的选项。这些选项的细节超过了本书的范围，不予讨论。</p><h5 id="小心-1" tabindex="-1"><a class="header-anchor" href="#小心-1"><span>小心</span></a></h5><p>有一个命令 grub-mkconfig被用于自动创建配置文件。它使用 /etc/grub.d 中的脚本创建新配置文件，这会覆盖您手动编写的grub.cfg。这些脚本主要是为非源代码发行版设计的，在 LFS中不推荐使用。但是，如果您安装了商业发行版，它很可能在发行版中被运行，记得备份 grub.cfg 以防它被覆盖。</p>`,383)]))}const h=i(l,[["render",d]]),r=JSON.parse('{"path":"/note-book/LinuxFromScratch/LFS-NoteBook.html","title":"LFS编译笔记以深入了解Linux","lang":"zh-CN","frontmatter":{"description":"LFS编译笔记以深入了解Linux LF规定的包 LFS宿主机体质要求 宿主机体检 Linux 常用分区(科普) 还有其他几个并非必须，但在设计磁盘布局时应当考虑的分区。下面的列表并不完整，但可以作为一个参考。 /boot – 高度推荐。这个分区可以存储内核和其他引导信息。为了减少大磁盘可能引起的问题，建议将 /boot 分区设为第一块磁盘的第一个分区...","head":[["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/LinuxFromScratch/LFS-NoteBook.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"LFS编译笔记以深入了解Linux"}],["meta",{"property":"og:description","content":"LFS编译笔记以深入了解Linux LF规定的包 LFS宿主机体质要求 宿主机体检 Linux 常用分区(科普) 还有其他几个并非必须，但在设计磁盘布局时应当考虑的分区。下面的列表并不完整，但可以作为一个参考。 /boot – 高度推荐。这个分区可以存储内核和其他引导信息。为了减少大磁盘可能引起的问题，建议将 /boot 分区设为第一块磁盘的第一个分区..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T01:58:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T01:58:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LFS编译笔记以深入了解Linux\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-25T01:58:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PaperDragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"]]},"git":{"createdTime":1691939318000,"updatedTime":1706147919000,"contributors":[{"name":"PaperDragon","username":"PaperDragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon"},{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon-SH"}]},"readingTime":{"minutes":62.72,"words":18816},"filePathRelative":"note-book/LinuxFromScratch/LFS-NoteBook.md","localizedDate":"2023年8月13日","excerpt":"\\n<h2>LF规定的包</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>类型</th>\\n<th>包</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><em>LSB Core:</em></td>\\n<td>Bash, Bc, Binutils, Coreutils, Diffutils, File, Findutils,Gawk, Grep, Gzip, M4, Man-DB, Ncurses, Procps, Psmisc, Sed,Shadow, Tar, Util-linux, Zlib</td>\\n</tr>\\n<tr>\\n<td><em>LSB Desktop:</em></td>\\n<td>无</td>\\n</tr>\\n<tr>\\n<td><em>LSB Runtime Languages:</em></td>\\n<td>Perl, Python</td>\\n</tr>\\n<tr>\\n<td><em>LSB Imaging:</em></td>\\n<td>无</td>\\n</tr>\\n<tr>\\n<td><em>LSB Gtk3和LSB Graphics (试用):</em></td>\\n<td>无</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{h as comp,r as data};
