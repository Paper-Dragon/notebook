import{aq as s,ar as a,aw as e,av as n}from"./app-sjg7Zuk6.js";const t={};function l(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="nginx的url过长导致fastcgi协议崩溃" tabindex="-1"><a class="header-anchor" href="#nginx的url过长导致fastcgi协议崩溃"><span>Nginx的url过长导致fastcgi协议崩溃</span></a></h1><blockquote><p>Nginx的url过长出现的问题 414 Request-URI Too Large</p></blockquote><blockquote><p>研发写了个非常脑残的功能，竟然要把图片变成base64编码然后通过patch方法去发送给服务端。我人麻了。竟然要把这么复制的东西放到http head里，这尼玛离谱。下面是这件事的解决过程。</p></blockquote><h2 id="事件原因" tabindex="-1"><a class="header-anchor" href="#事件原因"><span>事件原因</span></a></h2><p>研发的postman发出了414错误，报错内容如下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">414</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Request-URI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Too</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Large</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 414请求url太大</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我看到之后，看了他的请求结构，直说他疯了。但是我有不能骂，我怕骂不过他。</p><p>然后我尝试调试这个问题</p><h2 id="调试过程" tabindex="-1"><a class="header-anchor" href="#调试过程"><span>调试过程</span></a></h2><p>从网上搜了很多资料都让调试一些nginx配置，实测不生效（nginx模块化设计，在某些模块内已经生效）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">client_header_buffer_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 512k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">large_client_header_buffers</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 512k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">client_max_body_size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置了这些参数之后，报错变成了500 服务器内部错误，我心想，问题更严重了，我日！</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[alert] 8300#0: *17306727 fastcgi request record is too big: 66431, client: 192.168.*, server: 192.168.0.183, request: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;GET xxxx....&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="原因解决" tabindex="-1"><a class="header-anchor" href="#原因解决"><span>原因解决</span></a></h2><p>从大佬 潘广宇 博客中看到，他翻看了nginx源码，找到原因，代码写死了长度。</p><p>https://github.com/nginx/nginx/blob/f255815f5d161fab0dd310fe826d4f7572e141f2/src/http/modules/ngx_http_fastcgi_module.c#L994</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">65535</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ngx_log_error(NGX_LOG_ALERT,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">log,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                  &quot;fastcgi request record is too big: %uz&quot;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NGX_ERROR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="深入探究" tabindex="-1"><a class="header-anchor" href="#深入探究"><span>深入探究</span></a></h2><p>当GET请求的参数大于65535字节时，Nginx 转发给 FastCGI 的请求头将会大于65535字节，<strong>FastCGI 协议限制 64k 数据</strong>，Nginx会自动抛出异常并中断了请求。</p>`,19)]))}const p=s(t,[["render",l],["__file","Nginx的url过长导致fastcgi协议崩溃.html.vue"]]),k=JSON.parse('{"path":"/note-book/Nginx-OpenResty/Nginx%E7%9A%84url%E8%BF%87%E9%95%BF%E5%AF%BC%E8%87%B4fastcgi%E5%8D%8F%E8%AE%AE%E5%B4%A9%E6%BA%83.html","title":"Nginx的url过长导致fastcgi协议崩溃","lang":"zh-CN","frontmatter":{"description":"Nginx的url过长导致fastcgi协议崩溃 Nginx的url过长出现的问题 414 Request-URI Too Large 研发写了个非常脑残的功能，竟然要把图片变成base64编码然后通过patch方法去发送给服务端。我人麻了。竟然要把这么复制的东西放到http head里，这尼玛离谱。下面是这件事的解决过程。 事件原因 研发的postm...","head":[["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Nginx-OpenResty/Nginx%E7%9A%84url%E8%BF%87%E9%95%BF%E5%AF%BC%E8%87%B4fastcgi%E5%8D%8F%E8%AE%AE%E5%B4%A9%E6%BA%83.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"Nginx的url过长导致fastcgi协议崩溃"}],["meta",{"property":"og:description","content":"Nginx的url过长导致fastcgi协议崩溃 Nginx的url过长出现的问题 414 Request-URI Too Large 研发写了个非常脑残的功能，竟然要把图片变成base64编码然后通过patch方法去发送给服务端。我人麻了。竟然要把这么复制的东西放到http head里，这尼玛离谱。下面是这件事的解决过程。 事件原因 研发的postm..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T06:21:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-22T06:21:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx的url过长导致fastcgi协议崩溃\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-22T06:21:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"PaperDragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"]]},"git":{"createdTime":1704690482000,"updatedTime":1711088486000,"contributors":[{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":3,"url":"https://github.com/PaperDragon-SH"},{"name":"PaperDragon","username":"PaperDragon","email":"2678885646@qq.com","commits":1,"url":"https://github.com/PaperDragon"}]},"readingTime":{"minutes":1.29,"words":388},"filePathRelative":"note-book/Nginx-OpenResty/Nginx的url过长导致fastcgi协议崩溃.md","localizedDate":"2024年1月8日","excerpt":"\\n<blockquote>\\n<p>Nginx的url过长出现的问题 414 Request-URI Too Large</p>\\n</blockquote>\\n<blockquote>\\n<p>研发写了个非常脑残的功能，竟然要把图片变成base64编码然后通过patch方法去发送给服务端。我人麻了。竟然要把这么复制的东西放到http head里，这尼玛离谱。下面是这件事的解决过程。</p>\\n</blockquote>\\n<h2>事件原因</h2>\\n<p>研发的postman发出了414错误，报错内容如下：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">414</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Request-URI</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Too</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Large</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 414请求url太大</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,k as data};
