import{ah as s,ai as a,ar as e,am as n}from"./app-brKYsD9u.js";const t={};function h(r,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="rke2集群命令行调试方法" tabindex="-1"><a class="header-anchor" href="#rke2集群命令行调试方法"><span>rke2集群命令行调试方法</span></a></h1><h2 id="cli-工具" tabindex="-1"><a class="header-anchor" href="#cli-工具"><span>CLI 工具</span></a></h2><p>RKE2 附带了多个 CLI 工具来帮助你访问和调试集群。启动时，它们会被提取到 <code>/var/lib/rancher/rke2/bin</code>。</p><h3 id="kubectl" tabindex="-1"><a class="header-anchor" href="#kubectl"><span>kubectl</span></a></h3><p>admin kubeconfig 在 <code>/etc/rancher/rke2/rke2.yaml</code> 处生成。</p><p>示例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> KUBECONFIG</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rancher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rke2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rke2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">yaml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/var/lib/rancher/rke2/bin/kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerd" tabindex="-1"><a class="header-anchor" href="#containerd"><span>Containerd</span></a></h3><p>RKE2 附带了 <code>ctr</code> 和 <code>crictl</code>。Containerd 套接字位于 <code>/run/k3s/containerd/containerd.sock</code>。</p><p>示例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/var/lib/rancher/rke2/bin/ctr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --address</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /run/k3s/containerd/containerd.sock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --namespace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> k8s.io</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> CRI_CONFIG_FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rancher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rke2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">agent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">crictl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">yaml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/var/lib/rancher/rke2/bin/crictl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="etcd" tabindex="-1"><a class="header-anchor" href="#etcd"><span>Etcd</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ETCDCTL_API</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">3</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> /var/lib/rancher/rke2/agent/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/2/fs/usr/local/bin/etcdctl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--cacert=/var/lib/rancher/rke2/server/tls/etcd/server-ca.crt</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--cert=/var/lib/rancher/rke2/server/tls/etcd/client.crt</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--key=/var/lib/rancher/rke2/server/tls/etcd/client.key</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--endpoints=127.0.0.1:2379</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--write-out=table</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> endpoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13)]))}const k=s(t,[["render",h]]),p=JSON.parse('{"path":"/note-book/Rancher/rke2%E9%9B%86%E7%BE%A4%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95.html","title":"rke2集群命令行调试方法","lang":"zh-CN","frontmatter":{"description":"rke2集群命令行调试方法 CLI 工具 RKE2 附带了多个 CLI 工具来帮助你访问和调试集群。启动时，它们会被提取到 /var/lib/rancher/rke2/bin。 kubectl admin kubeconfig 在 /etc/rancher/rke2/rke2.yaml 处生成。 示例： Containerd RKE2 附带了 ctr ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rke2集群命令行调试方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-21T07:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Paper-Dragon\\",\\"url\\":\\"https://github.com/Paper-Dragon\\",\\"email\\":\\"2678885646@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://www.geekery.cn/note-book/Rancher/rke2%E9%9B%86%E7%BE%A4%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"运维开发绿皮书"}],["meta",{"property":"og:title","content":"rke2集群命令行调试方法"}],["meta",{"property":"og:description","content":"rke2集群命令行调试方法 CLI 工具 RKE2 附带了多个 CLI 工具来帮助你访问和调试集群。启动时，它们会被提取到 /var/lib/rancher/rke2/bin。 kubectl admin kubeconfig 在 /etc/rancher/rke2/rke2.yaml 处生成。 示例： Containerd RKE2 附带了 ctr ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-21T07:42:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-21T07:42:25.000Z"}]]},"git":{"createdTime":1724149993000,"updatedTime":1724226145000,"contributors":[{"name":"PaperDragon-SH","username":"PaperDragon-SH","email":"2678885646@qq.com","commits":2,"url":"https://github.com/PaperDragon-SH"}],"changelog":[{"hash":"1085321c0bb19b6e1b8f59e6039baee94f2a5535","time":1724226145000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"rke2集群etcd数据库调试方法"},{"hash":"c3bc345db8c9f821ca80d40674d77deaa7a15de6","time":1724149993000,"email":"2678885646@qq.com","author":"PaperDragon-SH","message":"rke2集群命令行调试方法"}]},"readingTime":{"minutes":0.37,"words":111},"filePathRelative":"note-book/Rancher/rke2集群命令行调试方法.md","excerpt":"\\n<h2>CLI 工具</h2>\\n<p>RKE2 附带了多个 CLI 工具来帮助你访问和调试集群。启动时，它们会被提取到 <code>/var/lib/rancher/rke2/bin</code>。</p>\\n<h3>kubectl</h3>\\n<p>admin kubeconfig 在 <code>/etc/rancher/rke2/rke2.yaml</code> 处生成。</p>\\n<p>示例：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> KUBECONFIG</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">etc</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">rancher</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">rke2</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">rke2</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">yaml</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">/var/lib/rancher/rke2/bin/kubectl</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> get</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> nodes</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,p as data};
